<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Learning Loom</title><link>https://shrsv.github.io/</link><description>Recent content on The Learning Loom</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 10 Apr 2025 20:41:21 +0530</lastBuildDate><atom:link href="https://shrsv.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Market Capitalization</title><link>https://shrsv.github.io/p/market-capitalization/</link><pubDate>Thu, 10 Apr 2025 20:41:21 +0530</pubDate><guid>https://shrsv.github.io/p/market-capitalization/</guid><description>&lt;p>I was browsing some Bitbucket API documentation somewhere
when I read something like - &lt;em>Atlassian IPO&amp;rsquo;d with a market
capitalization of 4.37 Billion&lt;/em>&lt;/p>
&lt;p>I wanted to make sense of that sentence a bit more than I
already did.&lt;/p>
&lt;p>Obvious - but worth stating for the record: Atlassian builds
Bitbucket.&lt;/p>
&lt;p>Atlassian was publicly listed on NASDAQ on December 10, 2015.&lt;/p>
&lt;p>The symbol for the company was the memorable word - &lt;em>TEAM&lt;/em>&lt;/p>
&lt;p>And just in case you wish to know - NASDAQ stands for:&lt;/p>
&lt;blockquote>
&lt;p>National Association of Securities Dealers Automated Quotations&lt;/p>&lt;/blockquote>
&lt;p>That was a serious &lt;em>WTF&lt;/em> moment for me.&lt;/p>
&lt;p>Anyway - turns out I don&amp;rsquo;t know anything about:&lt;/p>
&lt;ul>
&lt;li>Atlassian&lt;/li>
&lt;li>NASDAQ&lt;/li>
&lt;li>Or market&lt;/li>
&lt;li>Or capitalization&lt;/li>
&lt;/ul>
&lt;p>But I do know one thing: 4,370,000,000 &amp;ndash; That&amp;rsquo;s a &lt;strong>huge&lt;/strong> number&lt;/p>
&lt;p>Here&amp;rsquo;s a visualization I drew for myself:&lt;/p>
&lt;p>&lt;img src="https://shrsv.github.io/p/market-capitalization/viz.png"
width="483"
height="600"
srcset="https://shrsv.github.io/p/market-capitalization/viz_hu_ab43e8aed908ad7c.png 480w, https://shrsv.github.io/p/market-capitalization/viz_hu_224215de6da85064.png 1024w"
loading="lazy"
alt="The number"
class="gallery-image"
data-flex-grow="80"
data-flex-basis="193px"
>&lt;/p>
&lt;p>Then I googled for TEAM, and found its stock market history.&lt;/p>
&lt;p>I went to the very beginning, Day 1. And saw this:&lt;/p>
&lt;p>&lt;img src="https://shrsv.github.io/p/market-capitalization/day1.png"
width="875"
height="538"
srcset="https://shrsv.github.io/p/market-capitalization/day1_hu_c052af1489cc2f8d.png 480w, https://shrsv.github.io/p/market-capitalization/day1_hu_3afb0fa364a0e902.png 1024w"
loading="lazy"
alt="Day 1"
class="gallery-image"
data-flex-grow="162"
data-flex-basis="390px"
>&lt;/p>
&lt;p>So I figure &lt;code>28 * 17M&lt;/code> should give the market capitalization - but then no. That&amp;rsquo;s an order of magnitude lesser than expected.&lt;/p>
&lt;p>Turns out - that is merely the &lt;em>trading volume&lt;/em> for the day; that is N number of shares were outstanding - up for the grabs - and only a percentage of that ended up getting traded:&lt;/p>
&lt;p>&lt;img src="https://shrsv.github.io/p/market-capitalization/tv.png"
width="1050"
height="196"
srcset="https://shrsv.github.io/p/market-capitalization/tv_hu_31a77f72a8e5d12c.png 480w, https://shrsv.github.io/p/market-capitalization/tv_hu_6b4e119ec2d8ef2.png 1024w"
loading="lazy"
alt="Trading Volume"
class="gallery-image"
data-flex-grow="535"
data-flex-basis="1285px"
>&lt;/p>
&lt;p>Tried trawling for data elsewhere, different sites, different places, stil not getting the numbers I need.&lt;/p>
&lt;p>Finally - in the NASDAQ site saw some relevant data:&lt;/p>
&lt;p>&lt;img src="https://shrsv.github.io/p/market-capitalization/nd.png"
width="731"
height="799"
srcset="https://shrsv.github.io/p/market-capitalization/nd_hu_2a3f5cab28bbe367.png 480w, https://shrsv.github.io/p/market-capitalization/nd_hu_2259c9b83bbdcfb8.png 1024w"
loading="lazy"
alt="NASDAQ details"
class="gallery-image"
data-flex-grow="91"
data-flex-basis="219px"
>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.nasdaq.com/market-activity/ipos/overview?dealId=979107-79756" target="_blank" rel="noopener"
>src&lt;/a>&lt;/p>
&lt;p>Tried pluggin and chugging a few numbers - no luck.&lt;/p>
&lt;p>Finally I went to the source at &lt;a class="link" href="https://www.sec.gov/Archives/edgar/data/1650372/000104746915009143/a2226831z424b4.htm" target="_blank" rel="noopener"
>SEC filing&lt;/a> and found the following:&lt;/p>
&lt;p>&lt;img src="https://shrsv.github.io/p/market-capitalization/sec.png"
width="1133"
height="443"
srcset="https://shrsv.github.io/p/market-capitalization/sec_hu_53e1d04b3b7a59fc.png 480w, https://shrsv.github.io/p/market-capitalization/sec_hu_72999692ca015a2f.png 1024w"
loading="lazy"
alt="SEC Listing"
class="gallery-image"
data-flex-grow="255"
data-flex-basis="613px"
>&lt;/p>
&lt;div class="goat svg-container ">
&lt;svg
xmlns="http://www.w3.org/2000/svg"
font-family="Menlo,Lucida Console,monospace"
viewBox="0 0 312 25"
>
&lt;g transform='translate(8,16)'>
&lt;text text-anchor='middle' x='0' y='4' fill='currentColor' style='font-size:1em'>5&lt;/text>
&lt;text text-anchor='middle' x='8' y='4' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='16' y='4' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='24' y='4' fill='currentColor' style='font-size:1em'>8&lt;/text>
&lt;text text-anchor='middle' x='32' y='4' fill='currentColor' style='font-size:1em'>7&lt;/text>
&lt;text text-anchor='middle' x='40' y='4' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='48' y='4' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='56' y='4' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='64' y='4' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='72' y='4' fill='currentColor' style='font-size:1em'>7&lt;/text>
&lt;text text-anchor='middle' x='88' y='4' fill='currentColor' style='font-size:1em'>+&lt;/text>
&lt;text text-anchor='middle' x='104' y='4' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='112' y='4' fill='currentColor' style='font-size:1em'>5&lt;/text>
&lt;text text-anchor='middle' x='120' y='4' fill='currentColor' style='font-size:1em'>5&lt;/text>
&lt;text text-anchor='middle' x='128' y='4' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='136' y='4' fill='currentColor' style='font-size:1em'>8&lt;/text>
&lt;text text-anchor='middle' x='144' y='4' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='152' y='4' fill='currentColor' style='font-size:1em'>3&lt;/text>
&lt;text text-anchor='middle' x='160' y='4' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='168' y='4' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='176' y='4' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='184' y='4' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='200' y='4' fill='currentColor' style='font-size:1em'>=&lt;/text>
&lt;text text-anchor='middle' x='216' y='4' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='224' y='4' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='232' y='4' fill='currentColor' style='font-size:1em'>8&lt;/text>
&lt;text text-anchor='middle' x='240' y='4' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='248' y='4' fill='currentColor' style='font-size:1em'>6&lt;/text>
&lt;text text-anchor='middle' x='256' y='4' fill='currentColor' style='font-size:1em'>7&lt;/text>
&lt;text text-anchor='middle' x='264' y='4' fill='currentColor' style='font-size:1em'>5&lt;/text>
&lt;text text-anchor='middle' x='272' y='4' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='280' y='4' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='288' y='4' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='296' y='4' fill='currentColor' style='font-size:1em'>9&lt;/text>
&lt;/g>
&lt;/svg>
&lt;/div>
&lt;p>So that&amp;rsquo;s the number of shares available - making up of &lt;em>Class A&lt;/em> and &lt;em>Class B&lt;/em> shares.&lt;/p>
&lt;p>I didn&amp;rsquo;t go into much details on this differrentiation - but there&amp;rsquo;s voting differences, etc - which is beside the point now. Many of the data trawling sites seem to get this wrong.&lt;/p>
&lt;p>Anyway - now that I know the necessary details, I could calculate market capitalization:&lt;/p>
&lt;div class="goat svg-container ">
&lt;svg
xmlns="http://www.w3.org/2000/svg"
font-family="Menlo,Lucida Console,monospace"
viewBox="0 0 712 57"
>
&lt;g transform='translate(8,16)'>
&lt;circle cx='288' cy='32' r='6' stroke='currentColor' fill='currentColor'>&lt;/circle>
&lt;text text-anchor='middle' x='0' y='4' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='0' y='36' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='8' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='8' y='36' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='16' y='4' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='16' y='36' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='24' y='4' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='24' y='36' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='32' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='32' y='36' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='40' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='40' y='36' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='56' y='4' fill='currentColor' style='font-size:1em'>c&lt;/text>
&lt;text text-anchor='middle' x='56' y='36' fill='currentColor' style='font-size:1em'>c&lt;/text>
&lt;text text-anchor='middle' x='64' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='64' y='36' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='72' y='4' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='72' y='36' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='80' y='4' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='80' y='36' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='88' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='88' y='36' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='96' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='96' y='36' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='104' y='4' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='104' y='36' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='112' y='4' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='112' y='36' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='120' y='4' fill='currentColor' style='font-size:1em'>z&lt;/text>
&lt;text text-anchor='middle' x='120' y='36' fill='currentColor' style='font-size:1em'>z&lt;/text>
&lt;text text-anchor='middle' x='128' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='128' y='36' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='136' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='136' y='36' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='144' y='4' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='144' y='36' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='152' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='152' y='36' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='160' y='4' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='160' y='36' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='176' y='4' fill='currentColor' style='font-size:1em'>=&lt;/text>
&lt;text text-anchor='middle' x='176' y='36' fill='currentColor' style='font-size:1em'>=&lt;/text>
&lt;text text-anchor='middle' x='192' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='192' y='36' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='200' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='200' y='36' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='208' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='208' y='36' fill='currentColor' style='font-size:1em'>8&lt;/text>
&lt;text text-anchor='middle' x='216' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='216' y='36' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='224' y='4' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='224' y='36' fill='currentColor' style='font-size:1em'>6&lt;/text>
&lt;text text-anchor='middle' x='232' y='36' fill='currentColor' style='font-size:1em'>7&lt;/text>
&lt;text text-anchor='middle' x='240' y='4' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='240' y='36' fill='currentColor' style='font-size:1em'>5&lt;/text>
&lt;text text-anchor='middle' x='248' y='4' fill='currentColor' style='font-size:1em'>u&lt;/text>
&lt;text text-anchor='middle' x='248' y='36' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='256' y='4' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='256' y='36' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='264' y='4' fill='currentColor' style='font-size:1em'>b&lt;/text>
&lt;text text-anchor='middle' x='264' y='36' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='272' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='272' y='36' fill='currentColor' style='font-size:1em'>9&lt;/text>
&lt;text text-anchor='middle' x='280' y='4' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='296' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='304' y='4' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='304' y='36' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='312' y='36' fill='currentColor' style='font-size:1em'>8&lt;/text>
&lt;text text-anchor='middle' x='320' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='328' y='4' fill='currentColor' style='font-size:1em'>u&lt;/text>
&lt;text text-anchor='middle' x='328' y='36' fill='currentColor' style='font-size:1em'>=&lt;/text>
&lt;text text-anchor='middle' x='336' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='344' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='344' y='36' fill='currentColor' style='font-size:1em'>5&lt;/text>
&lt;text text-anchor='middle' x='352' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='352' y='36' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='360' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='360' y='36' fill='currentColor' style='font-size:1em'>8&lt;/text>
&lt;text text-anchor='middle' x='368' y='4' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='368' y='36' fill='currentColor' style='font-size:1em'>4&lt;/text>
&lt;text text-anchor='middle' x='376' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='376' y='36' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='384' y='4' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='384' y='36' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='392' y='4' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='392' y='36' fill='currentColor' style='font-size:1em'>9&lt;/text>
&lt;text text-anchor='middle' x='400' y='4' fill='currentColor' style='font-size:1em'>g&lt;/text>
&lt;text text-anchor='middle' x='400' y='36' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='408' y='36' fill='currentColor' style='font-size:1em'>3&lt;/text>
&lt;text text-anchor='middle' x='416' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='416' y='36' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='424' y='4' fill='currentColor' style='font-size:1em'>h&lt;/text>
&lt;text text-anchor='middle' x='424' y='36' fill='currentColor' style='font-size:1em'>6&lt;/text>
&lt;text text-anchor='middle' x='432' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='432' y='36' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='440' y='4' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='440' y='36' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='448' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='456' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='472' y='4' fill='currentColor' style='font-size:1em'>x&lt;/text>
&lt;text text-anchor='middle' x='488' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='496' y='4' fill='currentColor' style='font-size:1em'>h&lt;/text>
&lt;text text-anchor='middle' x='504' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='512' y='4' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='520' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='536' y='4' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='544' y='4' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='552' y='4' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='560' y='4' fill='currentColor' style='font-size:1em'>c&lt;/text>
&lt;text text-anchor='middle' x='568' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='584' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='592' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='608' y='4' fill='currentColor' style='font-size:1em'>c&lt;/text>
&lt;text text-anchor='middle' x='616' y='4' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='624' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='632' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='640' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='656' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='664' y='4' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='680' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='688' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='696' y='4' fill='currentColor' style='font-size:1em'>y&lt;/text>
&lt;/g>
&lt;/svg>
&lt;/div>
&lt;p>Now - that&amp;rsquo;s 5.8 Billion. And that matches the news:&lt;/p>
&lt;p>&lt;img src="https://shrsv.github.io/p/market-capitalization/mv.png"
width="1019"
height="343"
srcset="https://shrsv.github.io/p/market-capitalization/mv_hu_7684ad2c7baa2173.png 480w, https://shrsv.github.io/p/market-capitalization/mv_hu_d15e2c33d2e5b624.png 1024w"
loading="lazy"
alt="The Market Value"
class="gallery-image"
data-flex-grow="297"
data-flex-basis="713px"
>&lt;/p></description></item><item><title>Betting > Believing</title><link>https://shrsv.github.io/p/betting-gt-believing/</link><pubDate>Wed, 26 Mar 2025 20:41:21 +0530</pubDate><guid>https://shrsv.github.io/p/betting-gt-believing/</guid><description>&lt;h2 id="the-power-of-betting-in-decision-making">The Power of Betting in Decision-Making
&lt;/h2>&lt;h3 id="navigating-uncertainty">Navigating Uncertainty
&lt;/h3>&lt;p>In real-world decision-making, uncertainty is a constant. Whether it’s a project deadline, a hiring choice, or a career move, information is often incomplete or unclear. Waiting for perfect clarity isn’t always an option—time runs out, resources dwindle, and complexity can overwhelm.&lt;/p>
&lt;p>Many rely on &lt;em>believing&lt;/em>—trusting intuition, assumptions, or the opinions of others—to guide them. While this approach can provide an initial sense of direction, it falls short when the stakes are high or the context is unique. A more effective strategy is &lt;em>betting&lt;/em>: making calculated decisions based on evidence and outcomes.&lt;/p>
&lt;h3 id="a-lesson-in-misjudgment">A Lesson in Misjudgment
&lt;/h3>&lt;p>Once, I was deep into a project with a looming deadline. I did some quick mental math and convinced myself, “It’s tight, but we’ve got this.” Riding a wave of optimism, I skimmed progress updates and reassured myself that things were on track.&lt;/p>
&lt;p>Then the deadline arrived—and the project was nowhere near completion. The issue wasn’t my team’s performance; it was my own failure to verify assumptions against reality. I had &lt;em>believed&lt;/em> instead of &lt;em>inspected&lt;/em>, and it cost us dearly.&lt;/p>
&lt;h3 id="why-believing-falls-short">Why Believing Falls Short
&lt;/h3>&lt;p>Believing feels natural. It’s tempting to trust gut feelings, conventional wisdom, or someone else’s word. However, this method has critical weaknesses:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Untested Assumptions:&lt;/strong> Unverified beliefs create blind spots.&lt;/li>
&lt;li>&lt;strong>High Stakes:&lt;/strong> Relying on trust alone can magnify risks in crucial moments.&lt;/li>
&lt;li>&lt;strong>Unique Contexts:&lt;/strong> Standard solutions often don’t fit specific challenges.&lt;/li>
&lt;/ul>
&lt;p>Examples highlight these pitfalls:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Hiring:&lt;/strong> A candidate’s resume may shine, but without a test project, a poor fit can slip through.&lt;/li>
&lt;li>&lt;strong>Projects:&lt;/strong> Optimistic projections can obscure real progress if milestones aren’t tracked.&lt;/li>
&lt;li>&lt;strong>Career Moves:&lt;/strong> A role might seem perfect, but the reality can be vastly different.&lt;/li>
&lt;/ul>
&lt;p>Believing can offer direction, but it falters under scrutiny. A more concrete approach is needed.&lt;/p>
&lt;h3 id="how-betting-takes-the-lead">How Betting Takes the Lead
&lt;/h3>&lt;p>Betting isn’t about reckless gambles; it’s about measured risks and tangible outcomes. It acknowledges uncertainty and transforms it into an advantage. Here’s why it works:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Commitment Sharpens Focus:&lt;/strong> Investing resources—time, effort, or money—forces clarity.&lt;/li>
&lt;li>&lt;strong>Results Teach:&lt;/strong> Every bet provides feedback, refining future decisions.&lt;/li>
&lt;li>&lt;strong>Action Trumps Hesitation:&lt;/strong> Betting prevents paralysis and promotes forward movement.&lt;/li>
&lt;li>&lt;strong>Reality Rules:&lt;/strong> Measurable outcomes ground decisions in fact, cutting through bias.&lt;/li>
&lt;/ul>
&lt;p>Practical applications demonstrate its effectiveness:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Hiring:&lt;/strong> Assign a trial project. Success justifies hiring; failure limits risk.&lt;/li>
&lt;li>&lt;strong>Projects:&lt;/strong> Set a milestone—like a prototype in two weeks. Hit it and proceed; miss it and reassess.&lt;/li>
&lt;li>&lt;strong>Career Moves:&lt;/strong> Test a new role through a short contract. If it fits, commit; if not, pivot with minimal loss.&lt;/li>
&lt;/ul>
&lt;p>Betting converts vague hopes into structured experiments, yielding clarity through action.&lt;/p>
&lt;h3 id="a-historical-perspective-pascals-wager">A Historical Perspective: Pascal’s Wager
&lt;/h3>&lt;p>This mindset isn’t new. The 17th-century philosopher Blaise Pascal framed belief in God as a bet:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Believe, and God exists:&lt;/strong> Immense reward.&lt;/li>
&lt;li>&lt;strong>Believe, and God doesn’t:&lt;/strong> Minor loss.&lt;/li>
&lt;li>&lt;strong>Don’t believe, and God exists:&lt;/strong> Major loss.&lt;/li>
&lt;li>&lt;strong>Don’t believe, and God doesn’t:&lt;/strong> Small gain.&lt;/li>
&lt;/ul>
&lt;p>Pascal argued that betting on belief made sense—the potential upside outweighed the downside. This logic extends beyond faith: weigh potential gains and losses, then act decisively under uncertainty.&lt;/p>
&lt;h3 id="using-bets-to-overcome-deadlocks">Using Bets to Overcome Deadlocks
&lt;/h3>&lt;p>Decisions rarely come with full certainty, yet action is unavoidable. Believing may inspire ideas, but it fails when precision matters. Betting—acting with intent, measuring results, and adapting—handles uncertainty far better. It’s a tool for progress, turning ambiguity into opportunity.&lt;/p>
&lt;p>When teams or leaders face decision paralysis, betting can break the deadlock. It’s not about reckless risk-taking; it’s about structured progress:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>For Leaders:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Demonstrates confidence by committing to a direction.&lt;/li>
&lt;li>Cuts through hesitation with thoughtful choices.&lt;/li>
&lt;li>Example: Setting a bold goal to align and energize a team.&lt;/li>
&lt;li>Encourages responsibility and decisiveness.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>For Teams:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Moves from debate to action.&lt;/li>
&lt;li>Provides clear targets and accountability.&lt;/li>
&lt;li>Fosters learning—even from failure.&lt;/li>
&lt;li>Keeps momentum going.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>In Uncertainty:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Selects a single option when too many exist.&lt;/li>
&lt;li>Tests small ideas before full commitment.&lt;/li>
&lt;li>Turns confusion into growth opportunities.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Betting isn’t about perfection—it’s about progress. It helps leaders make decisive choices, strengthens team cohesion, and prevents stagnation. The next time you’re stuck, try placing a bet: define a goal, commit to an action, and learn from the outcome.&lt;/p>
&lt;p>It may just work better than endless debates about “beliefs.”&lt;/p></description></item><item><title>I Disagree With Jeff Bezos</title><link>https://shrsv.github.io/p/i-disagree-with-jeff-bezos/</link><pubDate>Sat, 22 Mar 2025 20:41:21 +0530</pubDate><guid>https://shrsv.github.io/p/i-disagree-with-jeff-bezos/</guid><description>&lt;p>It’s not every day that I find myself at odds with someone like Jeff Bezos (on a matter of principle, of course).&lt;/p>
&lt;p>The man who built Amazon into a global phenomenon once said, &lt;strong>“Good intentions don’t work. Mechanisms do.”&lt;/strong>&lt;/p>
&lt;p>At first glance, it’s a compelling statement—practical, grounded, and appealing to the results-driven crowd
in business and economic worlds.&lt;/p>
&lt;p>But the more I reflect on it, the more I disagree.&lt;/p>
&lt;p>I will argue here that intentions, far from being irrelevant, are foundational to improving
the quality of human existence.&lt;/p>
&lt;p>My reasons - in short - are as follows:&lt;/p>
&lt;ul>
&lt;li>Intent is about us - humans; effect is about the world at large.&lt;/li>
&lt;li>Intent is spiritual or psychological in nature; effect is economic or physical in nature (usually).&lt;/li>
&lt;li>Intent is often a relatively long-term phenomenon; mechanism is usually more short-term.&lt;/li>
&lt;/ul>
&lt;h2 id="a-bit-of-history">A bit of history&amp;hellip;
&lt;/h2>&lt;p>Look at the sages, prophets, and spiritual traditions that have guided humanity for millennia.&lt;/p>
&lt;p>From Buddhist monks to the wise teachers of ancient India, they’ve all emphasized one thing: &lt;em>get your intent right&lt;/em>.&lt;/p>
&lt;p>Why?&lt;/p>
&lt;p>Because intent is tightly coupled to the quality of your consciousness - which,
in the long run, determines actions that lead to the individual and the world&amp;rsquo;s
future.&lt;/p>
&lt;p>Contrast this with the economic perspective, where intentions are dismissed as fluff.&lt;/p>
&lt;p>Economists and business people often argue that what matters are effects—tangible results, second-order consequences, and measurable outputs.&lt;/p>
&lt;p>And mechanisms, they say, are what drive success.&lt;/p>
&lt;p>But I think this view misses something fundamental.&lt;/p>
&lt;h2 id="putting-the-idea-through-the-common-sense-filter">Putting the idea through the &amp;ldquo;common sense&amp;rdquo; filter
&lt;/h2>&lt;p>Let’s test this idea with a simple scenario.&lt;/p>
&lt;p>Imagine you’re facing a brain tumor, and you need a neurosurgeon.&lt;/p>
&lt;p>You have two options: one is a brilliant technician with a criminal background, whose intentions you distrust; the other is less technical but genuinely committed to your well-being.&lt;/p>
&lt;p>Who do you choose?&lt;/p>
&lt;p>Most of us, I suspect, would pick the latter.&lt;/p>
&lt;p>Why?&lt;/p>
&lt;p>Because we instinctively know - intent matters.&lt;/p>
&lt;p>We instinctively sense that someone who doesn’t have our best interests at heart—no matter how skilled—can’t be trusted with something as precious as our life.&lt;/p>
&lt;p>Mechanisms alone don’t cut it when the stakes are personal.&lt;/p>
&lt;h2 id="time-horizon">Time Horizon
&lt;/h2>&lt;p>Now, let’s widen the lens.&lt;/p>
&lt;p>Consider the longest-standing organizations in history: churches, temples, spiritual lineages, educational institutions, and service-oriented groups.&lt;/p>
&lt;p>These entities have endured for decades, centuries, even millennia—often thriving regardless of economic conditions.&lt;/p>
&lt;p>Take the Shankaracharya tradition in India, a lineage of wisdom that has persisted for over a thousand years.&lt;/p>
&lt;p>It’s not built on economic principles, which are inherently dynamic and unstable, but on an unchanging commitment to truth and human upliftment.&lt;/p>
&lt;p>What do these organizations have in common?&lt;/p>
&lt;p>They operate on what I call the “Intent Principle” rather than the “Effect Principle.”&lt;/p>
&lt;p>Their focus isn’t solely on short-term outputs or market fluctuations; it’s on a deeper, enduring purpose.&lt;/p>
&lt;p>And that purpose—rooted in goodwill and noble intent—carries them through storms that topple profit-driven systems.&lt;/p>
&lt;h2 id="maybe-intent-in-itself-can-be-seen-as-part-of-larger-mechanism">Maybe Intent In Itself Can Be Seen As Part of Larger Mechanism
&lt;/h2>&lt;p>Of course, I’m not saying mechanisms don’t matter.&lt;/p>
&lt;p>A well-designed system can amplify the impact of good intentions.&lt;/p>
&lt;p>But intent isn’t separate from the mechanism—it’s part of it, especially in human organizations.&lt;/p>
&lt;p>When we sense that someone doesn’t wish us well or lacks consideration, we pull away.&lt;/p>
&lt;p>That’s the genesis of disorder, distrust, and collapse.&lt;/p>
&lt;p>Conversely, when intent is genuine and inspiring, it binds people together, fueling cooperation and resilience.&lt;/p>
&lt;p>Intent is the foundation; mechanisms are the structure built upon it.&lt;/p>
&lt;h2 id="the-durability-of-intent">The Durability of Intent
&lt;/h2>&lt;p>Economic systems, by their nature, are concrete but fleeting.&lt;/p>
&lt;p>They rise and fall with markets, technologies, and trends.&lt;/p>
&lt;p>Intent, on the other hand, is abstract yet enduring.&lt;/p>
&lt;p>A noble thought—a commitment to benefit others, to serve a country, or to enhance well-being—can survive generations.&lt;/p>
&lt;p>It’s not easily destroyed, even under adverse circumstances.&lt;/p>
&lt;p>History shows this: the goodwill and aspirations of our ancestors continue to inspire us long after their physical creations have crumbled.&lt;/p>
&lt;p>Think about it: no truly noble thought ever dies.&lt;/p>
&lt;p>It plants seeds that bloom into future actions, often in ways we can’t predict.&lt;/p>
&lt;p>Mechanisms, being rigid and material, eventually break down.&lt;/p>
&lt;p>Intent, being fluid and timeless, adapts and persists.&lt;/p>
&lt;h2 id="a-life-built-on-intent">A Life Built on Intent
&lt;/h2>&lt;p>So, where does this leave us?&lt;/p>
&lt;p>I believe good intentions matter more than mechanisms—not because they’re a substitute for results, but because they’re the firm ground on which all lasting results rest.&lt;/p>
&lt;p>A steadfast commitment to an inspiring intent is the best way to make the most of our lives, both for ourselves and for others.&lt;/p>
&lt;p>It’s what drives us and our associates through decades, even lifetimes.&lt;/p>
&lt;p>It’s what survives beyond us.&lt;/p>
&lt;p>Jeff Bezos might disagree, and the economists might scoff.&lt;/p>
&lt;p>But I’d rather take my cues from the sages who’ve stood the test of time.&lt;/p>
&lt;p>Get your intent right, and the mechanisms will follow.&lt;/p>
&lt;p>That’s the real power of intent.&lt;/p></description></item><item><title>Organizations That Last</title><link>https://shrsv.github.io/p/organizations-that-last/</link><pubDate>Fri, 21 Mar 2025 20:41:21 +0530</pubDate><guid>https://shrsv.github.io/p/organizations-that-last/</guid><description>&lt;p>&lt;img src="https://shrsv.github.io/p/organizations-that-last/image.png"
width="568"
height="378"
srcset="https://shrsv.github.io/p/organizations-that-last/image_hu_cb285cdb4fad44ac.png 480w, https://shrsv.github.io/p/organizations-that-last/image_hu_6eec0f29caa4a812.png 1024w"
loading="lazy"
alt="The Kailasa Temple"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="360px"
>&lt;/p>
&lt;p>Some organizations stand the test of time, lasting &lt;strong>centuries or even millennia&lt;/strong>.&lt;/p>
&lt;p>They don’t chase &lt;em>rapid growth&lt;/em>, which often leads to collapse.&lt;/p>
&lt;p>Think of a company like &lt;strong>WeWork&lt;/strong>,&lt;br>
that expanded too fast and fell apart due to &lt;em>mismanagement&lt;/em>.&lt;/p>
&lt;p>In contrast, some of these enduring groups focus on &lt;strong>purpose&lt;/strong>, &lt;strong>stability&lt;/strong>, and &lt;strong>community&lt;/strong>.&lt;/p>
&lt;p>For example, small family-owned businesses often endure because they prioritize &lt;em>legacy&lt;/em> over profit.&lt;/p>
&lt;p>They grow slowly, staying rooted in their communities, and pass their work through generations.&lt;/p>
&lt;p>Take &lt;strong>Kongo Gumi&lt;/strong> in Japan: founded in &lt;em>578 AD&lt;/em>, this construction firm built Buddhist temples for over &lt;strong>1,400 years&lt;/strong> across 40 generations before being absorbed in 2006.&lt;/p>
&lt;p>Or consider &lt;strong>Antinori&lt;/strong>, an Italian wine producer since &lt;em>1385&lt;/em>, now in its 26th generation, thriving by blending tradition with modern techniques.&lt;/p>
&lt;p>Then there are monasteries and convents, built on &lt;em>spiritual missions&lt;/em> that don’t bend to trends.&lt;/p>
&lt;p>They’re often self-sufficient, growing their own food or making goods like wine, and their isolation keeps them steady.&lt;/p>
&lt;p>The &lt;strong>Monastery of Saint Catherine&lt;/strong> in Egypt, founded in &lt;em>565 AD&lt;/em>, has survived invasions thanks to its remote spot at the foot of Mount Sinai.&lt;/p>
&lt;p>Similarly, the &lt;strong>Abbey of Monte Cassino&lt;/strong> in Italy, started in &lt;em>529 AD&lt;/em> by Saint Benedict, has been rebuilt after destruction—like during WWII—because its &lt;em>purpose&lt;/em> endures.&lt;/p>
&lt;p>Educational institutions also stand out for their longevity.&lt;/p>
&lt;p>They meet a core human need: the pursuit of &lt;strong>knowledge&lt;/strong>.&lt;/p>
&lt;p>With strong governance, endowments, and alumni support, they adapt while staying true to their mission.&lt;/p>
&lt;p>The &lt;strong>University of Al-Qarawiyyin&lt;/strong> in Morocco, founded in &lt;em>859 AD&lt;/em>, is the world’s &lt;em>oldest university&lt;/em>, evolving from a madrasa into a modern institution.&lt;/p>
&lt;p>In the UK, the &lt;strong>University of Oxford&lt;/strong> has been teaching since &lt;em>1096&lt;/em>, balancing tradition with academic excellence to remain a global leader.&lt;/p>
&lt;p>Broader religious institutions, beyond monasteries, also last, tied to &lt;em>spiritual&lt;/em> and &lt;em>cultural roles&lt;/em>.&lt;/p>
&lt;p>They often own assets like land and have global networks for support.&lt;/p>
&lt;p>The &lt;strong>Catholic Church&lt;/strong>, established in the &lt;em>1st century AD&lt;/em>, has weathered wars and schisms with its centralized authority in the Vatican.&lt;/p>
&lt;p>In India, the &lt;strong>Advaita Vedanta&lt;/strong> tradition, founded by &lt;em>Adi Shankaracharya&lt;/em> in the &lt;em>8th century AD&lt;/em>, continues to thrive.&lt;/p>
&lt;p>Shankaracharya established four mathas (monastic centers) in &lt;strong>Sringeri&lt;/strong>, &lt;strong>Dwarka&lt;/strong>, &lt;strong>Puri&lt;/strong>, and &lt;strong>Joshimath&lt;/strong> to preserve his non-dualistic philosophy, and these institutions still guide spiritual seekers today, rooted in ancient texts and practices.&lt;/p>
&lt;p>In Japan, the &lt;strong>Ise Grand Shrine&lt;/strong>, a Shinto site, has been rebuilt every 20 years for over &lt;strong>1,300 years&lt;/strong>, a ritual that keeps its spirit alive.&lt;/p>
&lt;p>Guilds and trade associations offer another angle. They protect professions, set standards, and build community, adapting over time to stay relevant.&lt;/p>
&lt;p>The &lt;strong>Worshipful Company of Goldsmiths&lt;/strong> in the UK, founded in &lt;em>1327&lt;/em>, still regulates the goldsmith trade today.&lt;/p>
&lt;p>The &lt;strong>Hanseatic League&lt;/strong>, a network of merchant guilds from the 13th to 17th centuries in Europe, shaped trade practices that echo in modern organizations.&lt;/p>
&lt;p>Charitable foundations endure by focusing on &lt;em>long-term missions&lt;/em>, backed by endowments and stable governance.&lt;/p>
&lt;p>The &lt;strong>Rockefeller Foundation&lt;/strong>, started in &lt;em>1913&lt;/em>, has funded global health and education for over a century, tackling issues like climate change.&lt;/p>
&lt;p>The &lt;strong>Wellcome Trust&lt;/strong> in the UK, since &lt;em>1936&lt;/em>, uses its £30 billion endowment to support medical research, including the &lt;strong>Human Genome Project&lt;/strong>.&lt;/p>
&lt;p>Finally, indigenous and tribal organizations show remarkable resilience, rooted in &lt;em>culture&lt;/em> and &lt;em>land&lt;/em>.&lt;/p>
&lt;p>The &lt;strong>Iroquois Confederacy&lt;/strong> in North America, formed around &lt;em>1142 AD&lt;/em>, unites six nations and still operates today, its governance even influencing the U.S. Constitution.&lt;/p>
&lt;p>The &lt;strong>San People&lt;/strong> of Southern Africa have maintained their communal structures for &lt;strong>thousands of years&lt;/strong>, passing traditions through oral storytelling.&lt;/p>
&lt;p>What ties these organizations together? A &lt;strong>clear mission&lt;/strong>, &lt;strong>strong community ties&lt;/strong>, and a focus on &lt;em>sustainability&lt;/em> over reckless growth.&lt;/p>
&lt;p>They prove that lasting impact comes from &lt;strong>purpose&lt;/strong> and &lt;strong>patience&lt;/strong>, not chasing scale at all costs.&lt;/p></description></item><item><title>Structure And Meaning</title><link>https://shrsv.github.io/p/structure-and-meaning/</link><pubDate>Thu, 20 Mar 2025 20:41:21 +0530</pubDate><guid>https://shrsv.github.io/p/structure-and-meaning/</guid><description>&lt;p>&amp;ldquo;Up, down, up, down, up, down, &amp;hellip;&amp;rdquo;&lt;/p>
&lt;p>What comes next?&lt;/p>
&lt;p>You know the answer - it is &amp;ldquo;Up&amp;rdquo;&lt;/p>
&lt;p>How did you know it?&lt;/p>
&lt;p>Your mind inferred some sort of structure, and made a guess&lt;/p>
&lt;p>I mean - we do not know - what truly &lt;em>will&lt;/em> come next.&lt;/p>
&lt;p>But we are pretty sure - due to the repetition - and we expect it to be &amp;ldquo;up&amp;rdquo;.&lt;/p>
&lt;p>There could be a breakage of pattern, but the fact that
we expected an outcome - that hints at underlying structure.&lt;/p>
&lt;p>Look at your favorite music&lt;/p>
&lt;p>There is a structure to that - and one almost waits for one&amp;rsquo;s
favorite parts of the music. At least I do.&lt;/p>
&lt;p>So - our feeling of &amp;ldquo;familiarity&amp;rdquo; hints at what makes things
meaningful to us.&lt;/p>
&lt;p>Consider something like the following:&lt;/p>
&lt;div class="goat svg-container ">
&lt;svg
xmlns="http://www.w3.org/2000/svg"
font-family="Menlo,Lucida Console,monospace"
viewBox="0 0 544 41"
>
&lt;g transform='translate(8,16)'>
&lt;text text-anchor='middle' x='0' y='4' fill='currentColor' style='font-size:1em'>"&lt;/text>
&lt;text text-anchor='middle' x='0' y='20' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='8' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='8' y='20' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='16' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='16' y='20' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='24' y='4' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='32' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>j&lt;/text>
&lt;text text-anchor='middle' x='40' y='4' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='48' y='4' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>;&lt;/text>
&lt;text text-anchor='middle' x='56' y='4' fill='currentColor' style='font-size:1em'>j&lt;/text>
&lt;text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='64' y='4' fill='currentColor' style='font-size:1em'>;&lt;/text>
&lt;text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='72' y='4' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='80' y='4' fill='currentColor' style='font-size:1em'>3&lt;/text>
&lt;text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='88' y='4' fill='currentColor' style='font-size:1em'>4&lt;/text>
&lt;text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>j&lt;/text>
&lt;text text-anchor='middle' x='96' y='4' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='104' y='4' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>;&lt;/text>
&lt;text text-anchor='middle' x='112' y='4' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='120' y='4' fill='currentColor' style='font-size:1em'>v&lt;/text>
&lt;text text-anchor='middle' x='120' y='20' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='128' y='4' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='128' y='20' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='136' y='4' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='144' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='152' y='4' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>j&lt;/text>
&lt;text text-anchor='middle' x='160' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>;&lt;/text>
&lt;text text-anchor='middle' x='168' y='4' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='176' y='4' fill='currentColor' style='font-size:1em'>j&lt;/text>
&lt;text text-anchor='middle' x='176' y='20' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='184' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='192' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='200' y='4' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>;&lt;/text>
&lt;text text-anchor='middle' x='208' y='4' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='208' y='20' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='216' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='216' y='20' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='224' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='224' y='20' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='232' y='4' fill='currentColor' style='font-size:1em'>j&lt;/text>
&lt;text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='240' y='4' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='240' y='20' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='248' y='4' fill='currentColor' style='font-size:1em'>;&lt;/text>
&lt;text text-anchor='middle' x='248' y='20' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='256' y='4' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='256' y='20' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='264' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='264' y='20' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='272' y='4' fill='currentColor' style='font-size:1em'>;&lt;/text>
&lt;text text-anchor='middle' x='272' y='20' fill='currentColor' style='font-size:1em'>j&lt;/text>
&lt;text text-anchor='middle' x='280' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='280' y='20' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='288' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='288' y='20' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='296' y='4' fill='currentColor' style='font-size:1em'>j&lt;/text>
&lt;text text-anchor='middle' x='296' y='20' fill='currentColor' style='font-size:1em'>;&lt;/text>
&lt;text text-anchor='middle' x='304' y='4' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='304' y='20' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='312' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='312' y='20' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='320' y='4' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='320' y='20' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='328' y='4' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='328' y='20' fill='currentColor' style='font-size:1em'>j&lt;/text>
&lt;text text-anchor='middle' x='336' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='336' y='20' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='344' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='344' y='20' fill='currentColor' style='font-size:1em'>3&lt;/text>
&lt;text text-anchor='middle' x='352' y='4' fill='currentColor' style='font-size:1em'>j&lt;/text>
&lt;text text-anchor='middle' x='352' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='360' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='360' y='20' fill='currentColor' style='font-size:1em'>4&lt;/text>
&lt;text text-anchor='middle' x='368' y='4' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='368' y='20' fill='currentColor' style='font-size:1em'>9&lt;/text>
&lt;text text-anchor='middle' x='376' y='4' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='376' y='20' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='384' y='4' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='384' y='20' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='392' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='392' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='400' y='4' fill='currentColor' style='font-size:1em'>j&lt;/text>
&lt;text text-anchor='middle' x='400' y='20' fill='currentColor' style='font-size:1em'>3&lt;/text>
&lt;text text-anchor='middle' x='408' y='4' fill='currentColor' style='font-size:1em'>;&lt;/text>
&lt;text text-anchor='middle' x='408' y='20' fill='currentColor' style='font-size:1em'>4&lt;/text>
&lt;text text-anchor='middle' x='416' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='416' y='20' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='424' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='424' y='20' fill='currentColor' style='font-size:1em'>3&lt;/text>
&lt;text text-anchor='middle' x='432' y='4' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='432' y='20' fill='currentColor' style='font-size:1em'>3&lt;/text>
&lt;text text-anchor='middle' x='440' y='4' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='440' y='20' fill='currentColor' style='font-size:1em'>4&lt;/text>
&lt;text text-anchor='middle' x='448' y='4' fill='currentColor' style='font-size:1em'>j&lt;/text>
&lt;text text-anchor='middle' x='448' y='20' fill='currentColor' style='font-size:1em'>9&lt;/text>
&lt;text text-anchor='middle' x='456' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='456' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='464' y='4' fill='currentColor' style='font-size:1em'>;&lt;/text>
&lt;text text-anchor='middle' x='464' y='20' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='472' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='472' y='20' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='480' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='480' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='488' y='4' fill='currentColor' style='font-size:1em'>k&lt;/text>
&lt;text text-anchor='middle' x='488' y='20' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='496' y='4' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='496' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='504' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='504' y='20' fill='currentColor' style='font-size:1em'>=&lt;/text>
&lt;text text-anchor='middle' x='512' y='20' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='520' y='20' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='528' y='20' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;/g>
&lt;/svg>
&lt;/div>
&lt;p>Something random like that - doesn&amp;rsquo;t hold our attention much.&lt;/p>
&lt;p>You skip through such stuff.&lt;/p>
&lt;p>Why? Because we cannot figure out - &amp;ldquo;What does it mean?&amp;rdquo;&lt;/p>
&lt;p>So the biggest point of our life is that we get a feeling
of familiarity - that we get meaning.&lt;/p>
&lt;p>We may be wrong sometimes as well - that&amp;rsquo;s part of the adventure but that sense of familiarity is what keeps us interested in
music, story, problems.&lt;/p>
&lt;p>The possibility of becoming familiar is the most alluring part
of music.&lt;/p>
&lt;p>Likewise, it is difficult for us to keep any interest in things
that seem random, things that we cannot seem to comprehend, and
things which we think we will &lt;em>never&lt;/em> understand or become familiar with.&lt;/p>
&lt;p>So - to be interested - we must perceive at least part of the underlying
structure of the thing, and hope that you can unravel more, test yourself
moe.&lt;/p>
&lt;p>That&amp;rsquo;s important.&lt;/p>
&lt;p>I am building organiazations, such as &lt;a class="link" href="https://hexmos.com" target="_blank" rel="noopener"
>Hexmos&lt;/a> and software
tools like &lt;a class="link" href="https://hexmos.com/liveapi" target="_blank" rel="noopener"
>LiveAPI&lt;/a>&lt;/p>
&lt;p>Our goal with the tools and teams that we build is - to aim to construct
interesting, alluring and satisfying structures.&lt;/p>
&lt;p>Another observation - I&amp;rsquo;ve had is - a person who seems not to be able
to find their place in the world - feels disoriented, becomes
more and more of a madman by the day.&lt;/p>
&lt;p>Look at any strongly religious person - you will rarely see them
depressed and dejected beyond comprehension - the reason being - their
&lt;em>mind is structured under a scheme&lt;/em>. There is a structured organization to their mind, so it
is not falling apart.&lt;/p>
&lt;p>A mind that is so sceptical - that it is unable to build any structure
at all - cannot survive - because it is too unstable, too random - too
free.&lt;/p>
&lt;p>From a psychological, or mental level, excess freedom of &amp;ldquo;anything is possible&amp;rdquo;
means - insufficient structure - leads to lack of meaning, purpose and a constant
sense of &amp;ldquo;falling apart&amp;rdquo;.&lt;/p>
&lt;p>So we want good structure - along with a sense of adventure to unravel more of it.
That is what gives meaning to human life.&lt;/p></description></item><item><title>A Few Things About Macronutrients</title><link>https://shrsv.github.io/p/a-few-things-about-macronutrients/</link><pubDate>Mon, 17 Mar 2025 20:41:21 +0530</pubDate><guid>https://shrsv.github.io/p/a-few-things-about-macronutrients/</guid><description>&lt;p>In this post, I continue the exploration from the &lt;a class="link" href="https://shrsv.github.io/p/your-body-is-mostly-just-a-big-battery/" >past post&lt;/a>,
where I was trying to learn a bit more about the human body
from the very basics.&lt;/p>
&lt;h2 id="macronutrients-et-cetera">MacroNutrients, Et Cetera
&lt;/h2>&lt;p>First, we take in food - as solids/liquids.&lt;/p>
&lt;p>And that food is broken down into different macronutrients (and other components):&lt;/p>
&lt;ul>
&lt;li>proteins: body-building nutrients, found in meat, eggs, beans&lt;/li>
&lt;li>carbohydrates: sugars &amp;amp; starches, found in bread, rice, pasta&lt;/li>
&lt;li>triglycerides: fats - found in oils, butter, fatty foods&lt;/li>
&lt;/ul>
&lt;p>Most of the generally consumed food items have different proportions of the 3 macro nutrients - proteins, carbohydrates, triglycerides.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Food&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Protein (%)&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Carbohydrates (%)&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Triglycerides (Fats) (%)&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Other (Water, Fiber, Vitamins, Minerals etc.) (%)&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Bread (white)&lt;/strong>&lt;/td>
&lt;td>8–9%&lt;/td>
&lt;td>45–50%&lt;/td>
&lt;td>3–4%&lt;/td>
&lt;td>37–44%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Rice (cooked, white)&lt;/strong>&lt;/td>
&lt;td>2–3%&lt;/td>
&lt;td>28–30%&lt;/td>
&lt;td>0.3%&lt;/td>
&lt;td>67–70%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Pasta (cooked)&lt;/strong>&lt;/td>
&lt;td>5–6%&lt;/td>
&lt;td>25–30%&lt;/td>
&lt;td>1–2%&lt;/td>
&lt;td>62–69%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Meat (chicken breast, cooked)&lt;/strong>&lt;/td>
&lt;td>30–32%&lt;/td>
&lt;td>0%&lt;/td>
&lt;td>3–4%&lt;/td>
&lt;td>64–67%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Eggs&lt;/strong>&lt;/td>
&lt;td>12–13%&lt;/td>
&lt;td>1–2%&lt;/td>
&lt;td>10–11%&lt;/td>
&lt;td>74–77%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Beans (cooked, kidney beans)&lt;/strong>&lt;/td>
&lt;td>8–9%&lt;/td>
&lt;td>22–25%&lt;/td>
&lt;td>0.5–1%&lt;/td>
&lt;td>65–70%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Fruits (e.g., apple, banana)&lt;/strong>&lt;/td>
&lt;td>0.5–1%&lt;/td>
&lt;td>10–15%&lt;/td>
&lt;td>0.1–0.5%&lt;/td>
&lt;td>84–89%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Vegetables (e.g., carrots, broccoli)&lt;/strong>&lt;/td>
&lt;td>1–3%&lt;/td>
&lt;td>5–10%&lt;/td>
&lt;td>0.1–0.5%&lt;/td>
&lt;td>86–94%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Milk (whole)&lt;/strong>&lt;/td>
&lt;td>3–4%&lt;/td>
&lt;td>4–5%&lt;/td>
&lt;td>3–4%&lt;/td>
&lt;td>87–90%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Cheese (cheddar)&lt;/strong>&lt;/td>
&lt;td>25%&lt;/td>
&lt;td>2–3%&lt;/td>
&lt;td>33–35%&lt;/td>
&lt;td>37–40%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Butter&lt;/strong>&lt;/td>
&lt;td>0.5%&lt;/td>
&lt;td>0–1%&lt;/td>
&lt;td>80–82%&lt;/td>
&lt;td>17–19%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Cooking Oil (e.g., olive oil)&lt;/strong>&lt;/td>
&lt;td>0%&lt;/td>
&lt;td>0%&lt;/td>
&lt;td>100%&lt;/td>
&lt;td>0%&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Some observations:&lt;/p>
&lt;ul>
&lt;li>Macronutrients are only one of the many components in the food we eat&lt;/li>
&lt;li>Water, fibers, vitamins and minerals also appear in significant amounts on many of our food items&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://shrsv.github.io/p/a-few-things-about-macronutrients/image.png"
width="1112"
height="964"
srcset="https://shrsv.github.io/p/a-few-things-about-macronutrients/image_hu_a8570b6fdf4b7aae.png 480w, https://shrsv.github.io/p/a-few-things-about-macronutrients/image_hu_671c17aed6069ad0.png 1024w"
loading="lazy"
alt="Energy Generation System"
class="gallery-image"
data-flex-grow="115"
data-flex-basis="276px"
>&lt;/p>
&lt;h2 id="some-raqs-rarely-asked-questions-for-the-curious">Some RAQs (Rarely Asked Questions) for the Curious
&lt;/h2>&lt;h3 id="how-carbohydrates-and-glycogen-are-connected">How Carbohydrates and Glycogen are Connected?
&lt;/h3>&lt;p>Carbohydrates and glycogen are intrinsically linked in human metabolism.&lt;/p>
&lt;p>Carbohydrates, found in foods like grains, fruits, and vegetables, are broken down into glucose—a primary energy source.&lt;/p>
&lt;p>Excess glucose is converted into glycogen, a polysaccharide, for storage in the liver and skeletal muscles.&lt;/p>
&lt;p>This stored glycogen can be rapidly mobilized to maintain blood glucose levels during fasting or provide energy during physical activity.&lt;/p>
&lt;p>Thus, glycogen serves as the body&amp;rsquo;s method of storing carbohydrates for future energy needs.&lt;/p>
&lt;h3 id="how-are-glycogen-and-glycerol-are-different-they-sound-similar-and-so-are-confusing">How are glycogen and glycerol are different? They sound similar and so are confusing
&lt;/h3>&lt;p>Glycogen and glycerol, despite their similar-sounding names, are distinct substances with different structures and functions in the body.&lt;/p>
&lt;p>&lt;strong>Glycogen&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Structure&lt;/strong>: A highly branched polysaccharide composed of numerous glucose molecules linked together.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Function&lt;/strong>: Serves as the primary storage form of glucose in animals, fungi, and bacteria. It is stored mainly in the liver and muscle tissues and can be rapidly mobilized to meet energy demands.&lt;/p>
&lt;p>&lt;a class="link" href="https://en.wikipedia.org/wiki/Glycogen" target="_blank" rel="noopener"
>en.wikipedia.org&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Glycerol&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Structure&lt;/strong>: A three-carbon molecule that is chemically similar to sugar; it can be thought of as half of a glucose molecule.&lt;/p>
&lt;p>&lt;a class="link" href="https://learn.genetics.utah.edu/content/metabolism/gwords/" target="_blank" rel="noopener"
>learn.genetics.utah.edu&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Function&lt;/strong>: Acts as the backbone for triglycerides (fats) by binding with three fatty acids. During fat metabolism, triglycerides are broken down into fatty acids and glycerol, which can then be used for energy production or gluconeogenesis (the synthesis of glucose from non-carbohydrate sources).&lt;/p>
&lt;p>&lt;a class="link" href="https://en.wikipedia.org/wiki/Fatty_acid_metabolism" target="_blank" rel="noopener"
>en.wikipedia.org&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>In summary, while glycogen is a large, branched polymer of glucose serving as a storage form of energy, glycerol is a simple three-carbon molecule that forms the backbone of triglycerides and plays a role in lipid metabolism. Their structural differences underpin their distinct functions within the body&amp;rsquo;s energy management systems.&lt;/p>
&lt;p>In summary:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Glycogen&lt;/strong>: Think of &amp;ldquo;glycogen&amp;rdquo; as the body&amp;rsquo;s &amp;ldquo;glucose generator.&amp;rdquo; It is a large, branched molecule made up of glucose units and serves as the primary storage form of glucose in the body, mainly found in the liver and muscles.&lt;/li>
&lt;li>&lt;strong>Glycerol&lt;/strong>: Remember &amp;ldquo;glycerol&amp;rdquo; as the &amp;ldquo;lipid link.&amp;rdquo; It is a simple three-carbon molecule that forms the backbone of triglycerides, the main constituents of body fat in humans and other animals.&lt;/li>
&lt;/ul></description></item><item><title>Your Body is Mostly Just a Big Battery</title><link>https://shrsv.github.io/p/your-body-is-mostly-just-a-big-battery/</link><pubDate>Sat, 15 Mar 2025 20:41:21 +0530</pubDate><guid>https://shrsv.github.io/p/your-body-is-mostly-just-a-big-battery/</guid><description>&lt;p>I was recently reading &lt;a class="link" href="https://karpathy.github.io/2020/06/11/biohacking-lite/" target="_blank" rel="noopener"
>Biohacking Lite&lt;/a> by Andrej Karpathy, particularly the section called &lt;strong>The Four Batteries of Your Body&lt;/strong>. For the first time in my life, health-related topics are starting to make sense to me because Karpathy explains them from first principles.&lt;/p>
&lt;h3 id="tldr">TLDR
&lt;/h3>&lt;p>This is my TLDR after an hour of studying the topic. Any mistakes or misunderstandings are my own, and I may update this as my knowledge improves.&lt;/p>
&lt;ul>
&lt;li>Most of the human body is just battery storage that runs itself.&lt;/li>
&lt;li>There are different types of batteries to power various activities:
&lt;ul>
&lt;li>A quick, short-term battery that wakes up fast but finishes quickly.&lt;/li>
&lt;li>An on-demand, medium-term battery that wakes up a bit slower but works longer.&lt;/li>
&lt;li>A serious-effort, long-term battery that wakes up even slower but works much, much longer.&lt;/li>
&lt;li>A danger zone where your vital organs become the battery (!).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>At the end of the day, most of your body is just a big battery.&lt;/li>
&lt;li>All the batteries are used to convert ADP to ATP, which in turn powers all bodily activities.&lt;/li>
&lt;li>Short-term and medium-term batteries activate quickly but are mostly anaerobic (running without oxygen).&lt;/li>
&lt;li>The long-term battery is mostly aerobic (operating with oxygen).&lt;/li>
&lt;/ul>
&lt;h3 id="the-detailed-version">The Detailed Version
&lt;/h3>&lt;p>The human body is like an iPhone with a battery pack. The only difference is that this battery pack can charge beyond 100% with an almost infinite capacity to keep adding to it.&lt;/p>
&lt;p>The modern environment is filled with all sorts of foods and drinks around us, creating an oversupply of food. So, the charging outlet is always there, paired with this &amp;ldquo;always hungry&amp;rdquo; battery pack.&lt;/p>
&lt;p>The technical terms for the important battery packs are: Adipose tissue &amp;amp; Triglycerides (fat).&lt;/p>
&lt;p>These are stockpiled and sometimes synthesized, leading to increased volume. Stockpiling made sense in historic times when there were no guarantees about when one could get the next meal. However, with an abundance of food available today, this storage capacity is working against us.&lt;/p>
&lt;h3 id="from-adp-to-atp">From ADP to ATP
&lt;/h3>&lt;p>While there are many ways to stock up on adipose tissue and triglycerides, there’s only one way they get consumed: to synthesize ATP from ADP. ATP stands for adenosine triphosphate, and ADP stands for adenosine diphosphate.&lt;/p>
&lt;p>ATP is very important for the body because it is the universal currency through which internal work gets done:&lt;/p>
&lt;ul>
&lt;li>Transporting molecules across cell membranes.&lt;/li>
&lt;li>Untying DNA against hydrogen bonds.&lt;/li>
&lt;li>Moving myosin to operate muscles.&lt;/li>
&lt;li>Assisting with protein synthesis.&lt;/li>
&lt;/ul>
&lt;p>At any point in time, there’s only a very small amount of ATP available. ADP is attached to a phosphate group to become ATP. When the phosphate group is detached, energy is released to perform any work.&lt;/p>
&lt;p>So, that’s the &lt;em>universal work&lt;/em> done by the body to accomplish higher-level goals. To convert ADP to ATP, there are four types of batteries available:&lt;/p>
&lt;ul>
&lt;li>Super short-term battery&lt;/li>
&lt;li>Short-term battery&lt;/li>
&lt;li>Long-term battery&lt;/li>
&lt;li>Lean body mass&lt;/li>
&lt;/ul>
&lt;h3 id="super-short-term-battery-the-phosphocreatine-system">&lt;strong>Super Short-Term Battery: The Phosphocreatine System&lt;/strong>
&lt;/h3>&lt;p>This system provides an immediate but very limited energy buffer, allowing ATP to be rapidly regenerated. Many athletes take creatine supplements to enhance this buffer.&lt;/p>
&lt;ul>
&lt;li>Stores phosphate groups attached to creatine.&lt;/li>
&lt;li>Enables &lt;strong>quick, localized recycling of ADP into ATP&lt;/strong>.&lt;/li>
&lt;li>Has an &lt;strong>extremely small capacity&lt;/strong>, so it’s not a major factor in overall energy storage.&lt;/li>
&lt;/ul>
&lt;h3 id="short-term-battery-glycogen-24-hours">&lt;strong>Short-Term Battery: Glycogen {24 Hours}&lt;/strong>
&lt;/h3>&lt;p>Glycogen is the body’s primary &lt;strong>short-term energy store&lt;/strong>, located in the liver and muscles. It provides about &lt;strong>2,000 kcal&lt;/strong>, roughly &lt;strong>one day’s worth of energy at basal metabolic rate (BMR)&lt;/strong>. However, it is inefficient due to its &lt;strong>low energy density and high water retention&lt;/strong>.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Storage Locations:&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>Liver:&lt;/strong> ~120g&lt;/li>
&lt;li>&lt;strong>Skeletal muscle:&lt;/strong> ~400g&lt;/li>
&lt;li>&lt;strong>Blood glucose:&lt;/strong> ~4g&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Energy Yield:&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>4 kcal per gram&lt;/strong> of glycogen.&lt;/li>
&lt;li>&lt;strong>Total glycogen energy:&lt;/strong> ~2,000 kcal.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Efficiency Issues:&lt;/strong>
&lt;ul>
&lt;li>Glycogen binds &lt;strong>~3g of water per gram&lt;/strong>, making it a &lt;strong>poor long-term storage medium&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="long-term-battery-adipose-tissue-fat-50-80-days">&lt;strong>Long-Term Battery: Adipose Tissue (Fat) {50-80 Days}&lt;/strong>
&lt;/h3>&lt;p>Fat is the body’s &lt;strong>main high-capacity energy reserve&lt;/strong>, storing significantly more energy than glycogen. It is &lt;strong>more than twice as energy-dense as carbohydrates&lt;/strong> and can sustain the body for &lt;strong>weeks or even months&lt;/strong> if needed.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Energy Density:&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>Fat:&lt;/strong> &lt;strong>9 kcal per gram&lt;/strong> (vs. glycogen’s 4 kcal/g).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Example Calculation (from my 2019 data):&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>Body weight:&lt;/strong> 200 lbs&lt;/li>
&lt;li>&lt;strong>Fat mass:&lt;/strong> 40 lbs = &lt;strong>18,000g&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Total energy in fat:&lt;/strong> 18,000g × 9 kcal/g = &lt;strong>162,000 kcal&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Survival estimate:&lt;/strong> 162,000 kcal ÷ 2,000 kcal/day = &lt;strong>~81 days&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Comparisons for Scale:&lt;/strong>
&lt;ul>
&lt;li>Equivalent to &lt;strong>678 sticks of dynamite&lt;/strong> (1 MJ ≈ 239 kcal).&lt;/li>
&lt;li>Nearly enough energy to fully charge a 100 kWh Tesla battery twice!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="last-resort-battery-lean-body-mass">&lt;strong>Last Resort Battery: Lean Body Mass&lt;/strong>
&lt;/h3>&lt;p>When fat reserves are depleted, the body &lt;strong>breaks down muscle tissue for energy&lt;/strong>—a last-ditch survival mechanism.&lt;/p>
&lt;ul>
&lt;li>Occurs &lt;strong>only in extreme fasting or starvation&lt;/strong>.&lt;/li>
&lt;li>Uses &lt;strong>muscle proteins&lt;/strong> as the primary fuel source, converting them into glucose or ketones.&lt;/li>
&lt;li>&lt;strong>This process weakens the body over time&lt;/strong>, making it highly undesirable.&lt;/li>
&lt;/ul>
&lt;h3 id="how-your-body-uses-energy">&lt;strong>How Your Body Uses Energy&lt;/strong>
&lt;/h3>&lt;p>Your body constantly &lt;strong>charges and discharges&lt;/strong> all four energy stores at different rates, depending on your activity and food intake.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>After Eating (e.g., a Cookie):&lt;/strong>
&lt;ul>
&lt;li>The cookie is broken down into &lt;strong>glucose&lt;/strong>, which enters the bloodstream.&lt;/li>
&lt;li>If there is &lt;strong>excess glucose&lt;/strong> (as there usually is with cookies), your body:
&lt;ul>
&lt;li>&lt;strong>Stores it as glycogen&lt;/strong> in the &lt;strong>liver and muscles&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Rarely&lt;/strong>, if glucose is in extreme excess, converts it to &lt;strong>fat&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>During Exercise (e.g., Jogging):&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>First 3 seconds:&lt;/strong> The &lt;strong>phosphocreatine system&lt;/strong> (1) provides immediate energy.&lt;/li>
&lt;li>&lt;strong>Next 8-10 seconds:&lt;/strong> Glycogen (2) is used &lt;strong>anaerobically&lt;/strong> (without oxygen).&lt;/li>
&lt;li>&lt;strong>Longer duration:&lt;/strong>
&lt;ul>
&lt;li>Glycogen (2) and fat (3) become the main energy sources.&lt;/li>
&lt;li>These rely on &lt;strong>aerobic metabolism&lt;/strong>, which takes longer to activate but provides sustained energy.&lt;/li>
&lt;li>Your body increases &lt;strong>heart rate, breathing, and oxygen transport&lt;/strong> to keep up.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>In Starvation or Carb Deprivation:&lt;/strong> The body eventually resorts to &lt;strong>breaking down muscle (4) for energy&lt;/strong>, a last-resort survival mechanism.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="the-computer-memory-analogy-brilliant-stuff">The Computer Memory Analogy (Brilliant Stuff)
&lt;/h3>&lt;p>This &lt;strong>energy hierarchy&lt;/strong> can be compared to a computer’s &lt;strong>memory hierarchy&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Phosphocreatine System (1) → L1/L2 Cache&lt;/strong>
&lt;ul>
&lt;li>The &lt;strong>fastest and most immediate&lt;/strong> energy source, but with &lt;strong>very limited&lt;/strong> capacity.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Anaerobic Glycolysis (2) → RAM&lt;/strong>
&lt;ul>
&lt;li>Offers &lt;strong>quick access&lt;/strong>, but has &lt;strong>limited storage&lt;/strong> and is less efficient.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Aerobic Metabolism (3) → Disk Storage&lt;/strong>
&lt;ul>
&lt;li>Provides &lt;strong>high capacity&lt;/strong> and &lt;strong>efficiency&lt;/strong>, but is &lt;strong>slower to access&lt;/strong> due to the need for oxygen and the transport of fatty acids from adipose tissue.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Just like in computing, &lt;strong>moving energy around is costly&lt;/strong>, so the body prioritizes &lt;strong>faster but smaller&lt;/strong> energy stores before tapping into &lt;strong>slower but larger&lt;/strong> reserves.&lt;/p></description></item><item><title>Two Word Decisions</title><link>https://shrsv.github.io/p/two-word-decisions/</link><pubDate>Fri, 14 Mar 2025 20:41:21 +0530</pubDate><guid>https://shrsv.github.io/p/two-word-decisions/</guid><description>&lt;p>I&amp;rsquo;ve always been interested in decisions—two ways, really.&lt;/p>
&lt;p>I wanted to make better decisions.&lt;/p>
&lt;p>I wanted to make decisions in a better manner.&lt;/p>
&lt;p>When it comes to making decisions better, what I care about is &lt;strong>conserving energy&lt;/strong> while still getting a &lt;strong>decision done and executed&lt;/strong>.&lt;/p>
&lt;p>In my &lt;a class="link" href="https://shrsv.github.io/p/1741889488" >previous post&lt;/a>, I explained how &lt;strong>vagueness is the enemy of action&lt;/strong>.&lt;/p>
&lt;p>In this post, I’ll share a trick to fight against vagueness and fight for clarity.&lt;/p>
&lt;h2 id="your-willpower-is-limited">Your Willpower Is Limited
&lt;/h2>&lt;p>We know that willpower is a scarce resource—like a battery that gets drained throughout the day as we make decisions and take actions.&lt;/p>
&lt;p>Every decision we make taxes this willpower battery.&lt;/p>
&lt;p>And sometimes, we get stuck—overthinking, worrying, or somehow unable to proceed smoothly.&lt;/p>
&lt;p>This usually happens when we’re faced with some sort of &lt;em>problem&lt;/em>, big or small.&lt;/p>
&lt;p>Especially when &lt;em>stuck&lt;/em> on something, inaction can be fatal.&lt;/p>
&lt;p>As noted earlier, &lt;a class="link" href="https://shrsv.github.io/p/1741024971" >learning is movement&lt;/a>.&lt;/p>
&lt;p>My general experience has been that I have high self-control and willpower in the mornings, when the battery is full.&lt;/p>
&lt;p>But as the day progresses, my powers wane, and evenings and nights become more vulnerable.&lt;/p>
&lt;p>I’m more likely to waste time, break good eating habits, slouch in my posture, or falter in other ways due to this lack of willpower.&lt;/p>
&lt;h2 id="how-to-get-unstuckwithout-taxing-your-willpower">How to Get Unstuck—Without Taxing Your Willpower
&lt;/h2>&lt;p>Not only do we want to get unstuck and move on to the next action—which will give us more clues to solve the problem at hand—but we also want to do it without draining our willpower reserves.&lt;/p>
&lt;p>When we’re stuck, what we need is a nudge toward something slightly better.&lt;/p>
&lt;p>Say I’m considering grabbing some unhealthy food, breaking my intermittent fast, or something like that.&lt;/p>
&lt;p>If I’m fortunate enough to notice the moment, I can try to make my next choice a &lt;em>conscious two-word decision&lt;/em>.&lt;/p>
&lt;p>&lt;strong>Health, or Taste?&lt;/strong>&lt;/p>
&lt;p>Just two words. I’m asking myself: Will I let myself be guided by my desire for health or my desire for taste?&lt;/p>
&lt;p>Or take another example—I could &lt;em>consume one more social media post or YouTube video, or I could organize my thoughts and put them into writing&lt;/em>. I can ask myself:&lt;/p>
&lt;p>&lt;strong>Consume, or Create?&lt;/strong>&lt;/p>
&lt;h2 id="its-perfectly-fine-to-choose-the-worse-option-consciously">It’s Perfectly Fine to Choose the “Worse” Option Consciously
&lt;/h2>&lt;p>The point of the two-word decision is conscious decision-making. When we’re about to make a potentially harmful choice, it’s like &lt;em>prompting ourselves with a question&lt;/em>—and if the answer is yes, that’s fine, because it’s a deliberate choice.&lt;/p>
&lt;p>Here are some decisions I’ve made:&lt;/p>
&lt;ul>
&lt;li>Rest, or Exercise?&lt;/li>
&lt;li>Entertainment, or Business?&lt;/li>
&lt;li>Sleep, or Walk?&lt;/li>
&lt;li>Slump, or Sit Straight?&lt;/li>
&lt;li>Worry, or Act?&lt;/li>
&lt;li>Twitter, or Book?&lt;/li>
&lt;li>Assume, or Calculate?&lt;/li>
&lt;li>Trust, or Verify?&lt;/li>
&lt;li>Rest Now, or Solve the Problem?&lt;/li>
&lt;/ul>
&lt;h2 id="a-few-technicalities">A Few Technicalities
&lt;/h2>&lt;p>These are things I personally find helpful:&lt;/p>
&lt;ul>
&lt;li>Try to notice just as you’re about to do something unproductive.&lt;/li>
&lt;li>Put the potentially harmful option first (Option 1), then think of a slightly better or more inspiring alternative (Option 2).&lt;/li>
&lt;li>There’s no right or wrong decision here—as long as it’s conscious.&lt;/li>
&lt;/ul>
&lt;h2 id="the-bottom-line">The Bottom Line
&lt;/h2>&lt;p>Two-word decisions can nudge you toward better choices in a better way. Give them a try and let me know if they help you.&lt;/p></description></item><item><title>Vagueness is the Enemy of Action</title><link>https://shrsv.github.io/p/1741889488/</link><pubDate>Thu, 13 Mar 2025 18:11:28 +0000</pubDate><guid>https://shrsv.github.io/p/1741889488/</guid><description>&lt;p>I wasted some time today—I realized it when I looked back at how the time slipped away.&lt;/p>
&lt;p>Naturally, I wondered: what went wrong here?&lt;/p>
&lt;p>My mind churned for a bit, wrestling with the question, until an answer popped up: &lt;em>vague thoughts&lt;/em>.&lt;/p>
&lt;p>See, I’d been chasing &lt;em>correct&lt;/em> judgment, aiming for &lt;em>correct&lt;/em> thoughts.&lt;/p>
&lt;p>In that pursuit of getting it right, I ended up making things more &lt;em>complex&lt;/em>.&lt;/p>
&lt;p>And that complexity? It spiraled so far that I deluded myself—straying from the simple approach I could’ve taken.&lt;/p>
&lt;p>After mulling it over, a kind of &lt;strong>Grid of Action&lt;/strong> sprang to mind, and here’s how it looks:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Vague and Wrong&lt;/em> → No action&lt;/li>
&lt;li>&lt;em>Vague and Correct&lt;/em> → No action&lt;/li>
&lt;li>&lt;em>Simple and Wrong&lt;/em> → Action&lt;/li>
&lt;li>&lt;em>Simple and Correct&lt;/em> → Action&lt;/li>
&lt;/ul>
&lt;p>Now, someone might object: “If it’s vague, how can it be judged as correct or wrong?”&lt;/p>
&lt;p>Fair point—it’s tricky to pin down something so hazy.&lt;/p>
&lt;p>But that’s the thing: both possibilities exist in that murkiness.&lt;/p>
&lt;p>Whether it leans right or wrong in effect, it doesn’t matter—it’s a useless exercise either way. Why? Because no action comes of it.&lt;/p>
&lt;p>So, here’s the takeaway: if we want to &lt;em>do&lt;/em>, to stay engaged, to move, to experience life, we’ve got to keep our thoughts simple at all times.&lt;/p>
&lt;p>Complexity isn’t the enemy—it can be tackled—but it’s best surmounted through a thousand simple steps.&lt;/p>
&lt;p>Each one needs to be manageable, something we can actually grip, if we’re going to act at all.&lt;/p>
&lt;p>So complexity is not the enemy, but vagueness definitely is - that of action.&lt;/p></description></item><item><title>About HippoRAG</title><link>https://shrsv.github.io/p/about-hipporag/</link><pubDate>Wed, 12 Mar 2025 20:41:21 +0530</pubDate><guid>https://shrsv.github.io/p/about-hipporag/</guid><description>&lt;p>These are some LLM-assisted exploration notes from the paper &lt;a class="link" href="https://arxiv.org/pdf/2405.14831" target="_blank" rel="noopener"
>HippoRAG: Neurobiologically Inspired
Long-Term Memory for Large Language Models&lt;/a>&lt;/p>
&lt;h2 id="the-multi-hop-problem-in-rags">The Multi-Hop Problem in RAGs
&lt;/h2>&lt;p>The idea of &amp;ldquo;hops&amp;rdquo; are important in RAG.&lt;/p>
&lt;p>Consider this example.&lt;/p>
&lt;p>Question 1:&lt;/p>
&lt;p>&lt;em>&amp;ldquo;Who wrote Hamlet?&amp;rdquo;&lt;/em>&lt;/p>
&lt;p>→ The answer (Shakespeare) is in one document.*&lt;/p>
&lt;p>Question 2:&lt;/p>
&lt;p>&lt;em>&amp;ldquo;Which university did the president of OpenAI attend?&amp;rdquo;&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Step 1: Retrieve information on who the president of OpenAI is (e.g., Greg Brockman).&lt;/li>
&lt;li>Step 2: Retrieve information on which university Greg Brockman attended (e.g., MIT).&lt;/li>
&lt;/ul>
&lt;h2 id="how-hipporag-achieves-a-single-step-multi-hop-retrieval">How HippoRAG Achieves a Single-Step Multi-Hop Retrieval
&lt;/h2>&lt;p>Traditional RAG solutions, such as IRCoT (Iterative Retrieval Chain-of-Thought) depend on &lt;em>iterative retrieval&lt;/em> - kind of like looking up docs in a loop.&lt;/p>
&lt;p>With HippoRAG, two mechanisms are combined to compress these multiple hops into one:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Building a knowledge graph (KG)&lt;/strong> where concepts and relationships are indexed.&lt;/li>
&lt;li>&lt;strong>Using Personalized PageRank (PPR)&lt;/strong> to retrieve relevant paths across multiple documents in one query.&lt;/li>
&lt;/ul>
&lt;p>The benefits of the above combination makes HippoRAG:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Faster&lt;/strong> (avoids iterative retrieval)&lt;/li>
&lt;li>&lt;strong>More accurate&lt;/strong> (find connections that isolated retrieval steps miss)&lt;/li>
&lt;li>&lt;strong>Cheaper&lt;/strong> (reduce API calls and computation)&lt;/li>
&lt;/ul>
&lt;h2 id="how-hipporag-builds-its-knowledge-graph-kg">How HippoRAG Builds Its Knowledge Graph (KG)
&lt;/h2>&lt;p>HippoRAG constructs a &lt;strong>schemaless knowledge graph&lt;/strong> from a text corpus by leveraging &lt;strong>large language models (LLMs)&lt;/strong> for &lt;strong>Open Information Extraction (OpenIE)&lt;/strong> and retrieval encoders for linking entities. This process enables &lt;strong>multi-hop reasoning in a single retrieval step&lt;/strong>.&lt;/p>
&lt;h4 id="1-offline-indexing-building-the-graph">&lt;strong>1. Offline Indexing (Building the Graph)&lt;/strong>
&lt;/h4>&lt;p>This step is analogous to how the &lt;strong>human neocortex encodes memory&lt;/strong>.&lt;/p>
&lt;p>✅ &lt;strong>Extract Knowledge Graph Triples&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Uses an &lt;strong>instruction-tuned LLM&lt;/strong> (e.g., GPT-3.5) to &lt;strong>extract subject-predicate-object triples&lt;/strong> from text.
&lt;ul>
&lt;li>Example:&lt;br>
&lt;strong>Input Passage:&lt;/strong> &amp;ldquo;Steve Jobs co-founded Apple in 1976.&amp;rdquo;&lt;br>
&lt;strong>Extracted Triples:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>(Steve Jobs, co-founded, Apple)&lt;/code>&lt;/li>
&lt;li>&lt;code>(Apple, founded_in, 1976)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>✅ &lt;strong>Create Graph Nodes &amp;amp; Edges&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Nodes&lt;/strong> = extracted &lt;strong>entities (noun phrases)&lt;/strong> (e.g., &lt;em>Steve Jobs, Apple&lt;/em>).&lt;/li>
&lt;li>&lt;strong>Edges&lt;/strong> = relationships between entities (e.g., &lt;em>co-founded&lt;/em>).&lt;/li>
&lt;/ul>
&lt;p>✅ &lt;strong>Synonymy Linking (Parahippocampal Processing)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Uses &lt;strong>retrieval encoders&lt;/strong> (e.g., &lt;strong>Contriever, ColBERTv2&lt;/strong>) to &lt;strong>identify similar entities&lt;/strong> (e.g., &amp;ldquo;USA&amp;rdquo; = &amp;ldquo;United States&amp;rdquo;).&lt;/li>
&lt;li>Creates &lt;strong>extra edges&lt;/strong> to connect synonyms, improving retrieval robustness.&lt;/li>
&lt;/ul>
&lt;p>✅ &lt;strong>Store the Graph&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The final &lt;strong>knowledge graph&lt;/strong> consists of:
&lt;ul>
&lt;li>&lt;strong>Nodes (Entities)&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Edges (Relations &amp;amp; Synonyms)&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Passage Mapping&lt;/strong> (Each node is linked to the original text passage for retrieval)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="2-online-retrieval-querying-the-graph">&lt;strong>2. Online Retrieval (Querying the Graph)&lt;/strong>
&lt;/h3>&lt;p>This step mimics the &lt;strong>hippocampus retrieving memories&lt;/strong>.&lt;/p>
&lt;p>✅ &lt;strong>Extract Query Named Entities&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The LLM identifies &lt;strong>key entities&lt;/strong> in the query.&lt;/li>
&lt;li>Example: &lt;em>&amp;ldquo;Which Stanford professor works on Alzheimer&amp;rsquo;s?&amp;rdquo;&lt;/em>
&lt;ul>
&lt;li>Query Entities: &lt;code>{Stanford, Alzheimer’s}&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>✅ &lt;strong>Find Related Nodes in the Knowledge Graph&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Uses &lt;strong>retrieval encoders&lt;/strong> to find &lt;strong>graph nodes most similar&lt;/strong> to the query entities.&lt;/li>
&lt;li>Example: The query &lt;code>{Stanford, Alzheimer’s}&lt;/code> matches the node &lt;code>{Thomas Südhof}&lt;/code> in the KG.&lt;/li>
&lt;/ul>
&lt;p>✅ &lt;strong>Personalized PageRank (PPR) for Multi-Hop Retrieval&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Runs &lt;strong>Personalized PageRank (PPR)&lt;/strong> on the graph using query nodes as &lt;strong>starting points&lt;/strong>.&lt;/li>
&lt;li>Spreads probability over &lt;strong>connected nodes&lt;/strong>, enabling &lt;strong>multi-hop reasoning&lt;/strong>.&lt;/li>
&lt;li>Example:
&lt;ul>
&lt;li>&lt;code>{Stanford}&lt;/code> → &lt;code>{Thomas Südhof}&lt;/code>&lt;/li>
&lt;li>&lt;code>{Alzheimer’s}&lt;/code> → &lt;code>{Thomas Südhof}&lt;/code>&lt;/li>
&lt;li>&lt;strong>Final Retrieval:&lt;/strong> Thomas Südhof is a Stanford professor working on Alzheimer’s.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>✅ &lt;strong>Retrieve &amp;amp; Rank Passages&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The &lt;strong>most relevant passages&lt;/strong> are selected based on PPR scores.&lt;/li>
&lt;/ul>
&lt;h3 id="how-hipporag-uses-pagerank-to-order-results">&lt;strong>How HippoRAG Uses PageRank to Order Results&lt;/strong>
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Convert Text to a Graph&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Extract &lt;strong>entities&lt;/strong> (nodes) and &lt;strong>relationships&lt;/strong> (edges).&lt;/li>
&lt;li>Example:&lt;/li>
&lt;/ul>
&lt;div class="goat svg-container ">
&lt;svg
xmlns="http://www.w3.org/2000/svg"
font-family="Menlo,Lucida Console,monospace"
viewBox="0 0 328 41"
>
&lt;g transform='translate(8,16)'>
&lt;text text-anchor='middle' x='0' y='4' fill='currentColor' style='font-size:1em'>(&lt;/text>
&lt;text text-anchor='middle' x='0' y='20' fill='currentColor' style='font-size:1em'>(&lt;/text>
&lt;text text-anchor='middle' x='8' y='4' fill='currentColor' style='font-size:1em'>S&lt;/text>
&lt;text text-anchor='middle' x='8' y='20' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='16' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='16' y='20' fill='currentColor' style='font-size:1em'>h&lt;/text>
&lt;text text-anchor='middle' x='24' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='32' y='4' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='40' y='4' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='48' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='56' y='4' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='64' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>S&lt;/text>
&lt;text text-anchor='middle' x='72' y='4' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>ü&lt;/text>
&lt;text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='88' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>h&lt;/text>
&lt;text text-anchor='middle' x='96' y='4' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='104' y='4' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='112' y='4' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='120' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='128' y='4' fill='currentColor' style='font-size:1em'>y&lt;/text>
&lt;text text-anchor='middle' x='128' y='20' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='136' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='144' y='4' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='160' y='4' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='168' y='4' fill='currentColor' style='font-size:1em'>h&lt;/text>
&lt;text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='176' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='176' y='20' fill='currentColor' style='font-size:1em'>c&lt;/text>
&lt;text text-anchor='middle' x='184' y='4' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>h&lt;/text>
&lt;text text-anchor='middle' x='192' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='200' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='208' y='20' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='216' y='4' fill='currentColor' style='font-size:1em'>S&lt;/text>
&lt;text text-anchor='middle' x='224' y='4' fill='currentColor' style='font-size:1em'>ü&lt;/text>
&lt;text text-anchor='middle' x='224' y='20' fill='currentColor' style='font-size:1em'>A&lt;/text>
&lt;text text-anchor='middle' x='232' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='232' y='20' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='240' y='4' fill='currentColor' style='font-size:1em'>h&lt;/text>
&lt;text text-anchor='middle' x='240' y='20' fill='currentColor' style='font-size:1em'>z&lt;/text>
&lt;text text-anchor='middle' x='248' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='248' y='20' fill='currentColor' style='font-size:1em'>h&lt;/text>
&lt;text text-anchor='middle' x='256' y='4' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='256' y='20' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='264' y='4' fill='currentColor' style='font-size:1em'>)&lt;/text>
&lt;text text-anchor='middle' x='264' y='20' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='272' y='20' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='280' y='20' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='288' y='20' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='296' y='20' fill='currentColor' style='font-size:1em'>’&lt;/text>
&lt;text text-anchor='middle' x='304' y='20' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='312' y='20' fill='currentColor' style='font-size:1em'>)&lt;/text>
&lt;/g>
&lt;/svg>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Find Relevant Nodes&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>If the query is: &lt;em>&amp;ldquo;Which Stanford professor studies Alzheimer&amp;rsquo;s?&amp;rdquo;&lt;/em>&lt;/li>
&lt;li>The query &lt;strong>matches&lt;/strong> &lt;code>{Stanford, Alzheimer’s}&lt;/code> in the graph.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Run Personalized PageRank (PPR)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Give high starting scores to query nodes&lt;/strong> (&lt;code>Stanford&lt;/code> and &lt;code>Alzheimer’s&lt;/code>).&lt;/li>
&lt;li>&lt;strong>Spread scores to connected nodes&lt;/strong> (e.g., &lt;code>Thomas Südhof&lt;/code> gets a high score).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Rank Passages by PageRank Score&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Passages mentioning &lt;code>Thomas Südhof&lt;/code> get &lt;strong>top rank&lt;/strong>.&lt;/li>
&lt;li>Less relevant passages rank &lt;strong>lower&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://shrsv.github.io/p/about-hipporag/image.png"
width="1143"
height="377"
srcset="https://shrsv.github.io/p/about-hipporag/image_hu_ac67359686b4da5f.png 480w, https://shrsv.github.io/p/about-hipporag/image_hu_4abe0d9cb4edbeb4.png 1024w"
loading="lazy"
alt="alt text"
class="gallery-image"
data-flex-grow="303"
data-flex-basis="727px"
>&lt;/p>
&lt;h3 id="why-this-works">&lt;strong>Why This Works&lt;/strong>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Finds indirect connections&lt;/strong> (multi-hop retrieval).&lt;/li>
&lt;li>&lt;strong>Ranks based on real-world relevance&lt;/strong> rather than keyword matching.&lt;/li>
&lt;li>&lt;strong>Fast, since it&amp;rsquo;s done in one step.&lt;/strong>&lt;/li>
&lt;/ul></description></item><item><title>RAG: Not a Silver Bullet?</title><link>https://shrsv.github.io/p/1741723293/</link><pubDate>Tue, 11 Mar 2025 20:01:33 +0000</pubDate><guid>https://shrsv.github.io/p/1741723293/</guid><description>&lt;h2 id="a-few-ideas-about-rag">A Few Ideas About RAG
&lt;/h2>&lt;p>As I keep pouring in efforts to build &lt;a class="link" href="https://hexmos.com/liveapi/" target="_blank" rel="noopener"
>LiveAPI&lt;/a>, I get new ideas on how to make it better from time to time.&lt;/p>
&lt;p>There is a constant feeling that maybe we should have some sort of Chatbot on top of the structured API information we generate at scale.&lt;/p>
&lt;p>People say:&lt;/p>
&lt;p>&amp;ldquo;Nobody reads documentation these days&amp;rdquo;&lt;/p>
&lt;p>&amp;ldquo;I don&amp;rsquo;t think anyone will read docs anymore&amp;rdquo;&lt;/p>
&lt;p>&amp;ldquo;Nobody cares about documentation. Code is documentation&amp;rdquo;&lt;/p>
&lt;p>And so on.&lt;/p>
&lt;p>What they also sort of imply is that - we just want to ask a Chatbot or be surfaced with the relevant information automagically in the right place at the right time.&lt;/p>
&lt;h2 id="we-may-build-a-chatbot---at-some-point-in-the-future">We may build a Chatbot - at some point in the future
&lt;/h2>&lt;p>But for now - this post will be about one of the approaches to building Chatbots that seems to be making noise across places like Hacker News - called &amp;ldquo;RAG&amp;rdquo;&lt;/p>
&lt;p>RAG stands for Retrieval Augmented Generation&lt;/p>
&lt;p>The LLM in its primordial state is like our long-term memory or impressions. It sort of has a vague recollection of facts, ideas and sentiments. But it has to be grounded with something more concrete - before a specific answer can be given.&lt;/p>
&lt;p>RAG is about - helping the LLM remember better, while also helping it transform current or specific information into the framework of its answers.&lt;/p>
&lt;h2 id="rag-flaws---still-too-literal">RAG Flaws - Still too literal
&lt;/h2>&lt;p>I&amp;rsquo;ve heard from multiple quarters - with those having comparatively deeper knowledge on the topic that RAGs often underperform.&lt;/p>
&lt;p>&amp;ldquo;Just tag your docs with keywords - don&amp;rsquo;t bother with RAG&amp;rdquo;&lt;/p>
&lt;p>I&amp;rsquo;ve heard the above opinion expressed multiple times.&lt;/p>
&lt;p>Consider the following case mentioned on an &lt;a class="link" href="https://news.ycombinator.com/item?id=42174829" target="_blank" rel="noopener"
>HN Thread&lt;/a>.&lt;/p>
&lt;p>There&amp;rsquo;s a textual records of various activities performed day to day by a bunch of people.&lt;/p>
&lt;p>Now we are curious - &amp;ldquo;Guess the occupation of person X&amp;rdquo;&lt;/p>
&lt;p>The augmentation happens purely based on the keywords present in this question.&lt;/p>
&lt;p>Imagine now person X has been going to various chemistry conferences, etc but her occupation is not mentioned anywhere.&lt;/p>
&lt;p>Pure RAG approaches most probably will fail here because they cannot connect &amp;ldquo;attends chemistry conference&amp;rdquo; to &amp;ldquo;occupation&amp;rdquo; - because the keywords are sort of different&lt;/p>
&lt;h2 id="what-is-the-way-around">What is the way around?
&lt;/h2>&lt;p>For things like above - we fall back to the old search and information retrieval mechanisms.&lt;/p>
&lt;p>We build a semantic graph - putting related nodes together.&lt;/p>
&lt;p>We do PageRank, or similar alternatives.&lt;/p>
&lt;p>We essentially do search first.&lt;/p>
&lt;p>The LLM layer is mostly good for &amp;ldquo;summarizing&amp;rdquo; the findings.&lt;/p>
&lt;p>So - the role of something like RAG becomes much more limited, or sometimes even irrelevant.&lt;/p>
&lt;p>Many AI apps may end up with Search followed by Summarization.&lt;/p></description></item><item><title>Rosenblatt's Perceptron (WIP)</title><link>https://shrsv.github.io/p/rosenblatts-perceptron-wip/</link><pubDate>Sun, 09 Mar 2025 23:41:21 +0530</pubDate><guid>https://shrsv.github.io/p/rosenblatts-perceptron-wip/</guid><description>&lt;p>In &lt;strong>Smithsonian National Museum of American History&lt;/strong> - the following device
is visible:&lt;/p>
&lt;p>&lt;img src="https://shrsv.github.io/p/rosenblatts-perceptron-wip/1.jpg"
width="600"
height="473"
srcset="https://shrsv.github.io/p/rosenblatts-perceptron-wip/1_hu_1c6d17b0c660cde6.jpg 480w, https://shrsv.github.io/p/rosenblatts-perceptron-wip/1_hu_57728828e9e4b4f3.jpg 1024w"
loading="lazy"
alt="rosenblatt perceptron in museum"
class="gallery-image"
data-flex-grow="126"
data-flex-basis="304px"
>&lt;/p>
&lt;p>&lt;img src="https://shrsv.github.io/p/rosenblatts-perceptron-wip/2.jpg"
width="600"
height="472"
srcset="https://shrsv.github.io/p/rosenblatts-perceptron-wip/2_hu_e551eb67e49ece3.jpg 480w, https://shrsv.github.io/p/rosenblatts-perceptron-wip/2_hu_9299fc94f7bdeb09.jpg 1024w"
loading="lazy"
alt="S (Stimuli), A (Association), R (Response)"
class="gallery-image"
data-flex-grow="127"
data-flex-basis="305px"
>&lt;/p>
&lt;p>&lt;a class="link" href="https://americanhistory.si.edu/collections/object/nmah_334414" target="_blank" rel="noopener"
>(src)&lt;/a>&lt;/p>
&lt;p>The device is called the &lt;strong>Mark I Perceptron&lt;/strong>.&lt;/p>
&lt;p>It was built in 1957.&lt;/p>
&lt;p>The chief person behind construction of this device was &lt;a class="link" href="https://en.wikipedia.org/wiki/Frank_Rosenblatt" target="_blank" rel="noopener"
>Frank Rosenblatt&lt;/a>&lt;/p>
&lt;p>The device had 3 parts:&lt;/p>
&lt;ol>
&lt;li>Stimuli receptor monitor (S)&lt;/li>
&lt;li>Association machinery (A)&lt;/li>
&lt;li>Response mechanism (S)&lt;/li>
&lt;/ol>
&lt;p>This is almost a mechanical equivalent of what Minsky sort of talks
about in his &lt;a class="link" href="http://aurellem.org/society-of-mind/som-5.3.html" target="_blank" rel="noopener"
>&lt;em>Society of Mind&lt;/em>&lt;/a>:&lt;/p>
&lt;p>&lt;img src="https://shrsv.github.io/p/rosenblatts-perceptron-wip/3.png"
width="332"
height="210"
srcset="https://shrsv.github.io/p/rosenblatts-perceptron-wip/3_hu_4cc180999959f97.png 480w, https://shrsv.github.io/p/rosenblatts-perceptron-wip/3_hu_bdc6114d334dcfc1.png 1024w"
loading="lazy"
alt="Minsky’s Description"
class="gallery-image"
data-flex-grow="158"
data-flex-basis="379px"
>&lt;/p>
&lt;blockquote>
&lt;p>This diagram depicts our sensory machinery as sending information to the brain, wherein it is projected on some inner mental movie screen. Then, inside that ghostly theater, a lurking Self observes the scene and then considers what to do. Finally, that Self may act — somehow reversing all those steps — to influence the real world by sending various signals back through yet another family of remote-control accessories.
&amp;ndash; Marvin Minsky, The Society of Mind&lt;/p>&lt;/blockquote>
&lt;p>And this is Rosenbaltt tweaking the perceptron:&lt;/p>
&lt;p>&lt;img src="https://shrsv.github.io/p/rosenblatts-perceptron-wip/4.jpg"
width="497"
height="617"
srcset="https://shrsv.github.io/p/rosenblatts-perceptron-wip/4_hu_c2e0ce1842f5f865.jpg 480w, https://shrsv.github.io/p/rosenblatts-perceptron-wip/4_hu_94959b77a8a153f0.jpg 1024w"
loading="lazy"
alt="Rosenbaltt Working with Perceptron"
class="gallery-image"
data-flex-grow="80"
data-flex-basis="193px"
>&lt;/p>
&lt;p>You can see the &lt;a class="link" href="https://www.nytimes.com/1958/07/08/archives/new-navy-device-learns-by-doing-psychologist-shows-embryo-of.html" target="_blank" rel="noopener"
>NYT&lt;/a> reporting that the navy claimed the device
would eventually:&lt;/p>
&lt;blockquote>
&lt;p>the embryo of an electronic computer today that it expects will be able to walk, talk, see, write, reproduce itself and be conscious of its existence.&lt;/p>&lt;/blockquote>
&lt;p>&lt;img src="https://shrsv.github.io/p/rosenblatts-perceptron-wip/6.png"
width="402"
height="552"
srcset="https://shrsv.github.io/p/rosenblatts-perceptron-wip/6_hu_642ef1adb74d61e0.png 480w, https://shrsv.github.io/p/rosenblatts-perceptron-wip/6_hu_fba8ef22cbae61f6.png 1024w"
loading="lazy"
alt="The Prediction"
class="gallery-image"
data-flex-grow="72"
data-flex-basis="174px"
>&lt;/p>
&lt;p>All these things aside, we will try to cull some ideas from Rosenblatt&amp;rsquo;s original paper - accessible at &lt;a class="link" href="https://www.ling.upenn.edu/courses/cogs501/Rosenblatt1958.pdf" target="_blank" rel="noopener"
>The Perceptron: A Probabilistic Model for Information Storage and Organization in the Brain&lt;/a>&lt;/p>
&lt;h2 id="memory-is-the-foundation-for-higher-level-capabilities-but-what-is-it">Memory is the foundation for higher-level capabilities (but What is it?!)
&lt;/h2>&lt;p>&lt;img src="https://shrsv.github.io/p/rosenblatts-perceptron-wip/memory.png"
width="450"
height="195"
srcset="https://shrsv.github.io/p/rosenblatts-perceptron-wip/memory_hu_dfbdf1760e77712e.png 480w, https://shrsv.github.io/p/rosenblatts-perceptron-wip/memory_hu_6fb59de241cac732.png 1024w"
loading="lazy"
alt="The role of memory"
class="gallery-image"
data-flex-grow="230"
data-flex-basis="553px"
>&lt;/p>
&lt;h2 id="the-3-questions-and-rs-area-of-focus">The 3 Questions (And R&amp;rsquo;s Area of Focus)
&lt;/h2>&lt;p>&lt;img src="https://shrsv.github.io/p/rosenblatts-perceptron-wip/focus.png"
width="477"
height="255"
srcset="https://shrsv.github.io/p/rosenblatts-perceptron-wip/focus_hu_88f61c06e73b39ac.png 480w, https://shrsv.github.io/p/rosenblatts-perceptron-wip/focus_hu_d717b9b427741867.png 1024w"
loading="lazy"
alt="Focus Area"
class="gallery-image"
data-flex-grow="187"
data-flex-basis="448px"
>&lt;/p>
&lt;h2 id="how-is-stimulus-represented-in-storage">How is Stimulus represented in Storage?
&lt;/h2>&lt;p>R considers options on how storage may work - based on existing scholarship. The interesting scholarly decision happens right here - he picks the right architecture, the right bet so to speak.&lt;/p>
&lt;h3 id="the-critical-insight-r-makes-a-bet-on-the-nature-of-memory">The Critical Insight: R Makes a Bet On the Nature of Memory
&lt;/h3>&lt;p>Position A: Coded Representational Memory (Essentially - expecting an isolated storage of memory)&lt;/p>
&lt;blockquote>
&lt;p>The first suggests that storage of sensory information is in the form of coded representations or images, with some sort of one-to-one mapping between the sensory stimulus and the stored pattern. According to this hypothesis, if one understood the code or &amp;lsquo;wiring diagram&amp;rsquo; of the nervous system, one should, in principle, be able to discover exactly what an organism remembers by reconstructing the original sensory patterns from the &amp;lsquo;memory traces&amp;rsquo; which they have left, much as we might develop a photographic negative, or translate the pattern of electrical charges in the &amp;lsquo;memory&amp;rsquo; of a digital computer.&lt;/p>&lt;/blockquote>
&lt;p>Position B: Connectionist Memory&lt;/p>
&lt;blockquote>
&lt;p>The alternative approach, which stems from the tradition of British empiricism, hazards the guess that the images of stimuli may never really be recorded at all, and that the central nervous system simply acts as an intricate switching network, where retention takes the form of new connections, or pathways, between centers of activity. In many of the more recent developments of this position (Hebb&amp;rsquo;s &amp;lsquo;cell assembly,&amp;rsquo; and Hull&amp;rsquo;s &amp;lsquo;cortical anticipatory goal response,&amp;rsquo; for example) the &amp;lsquo;responses&amp;rsquo; which are associated to stimuli may be entirely contained within the CNS itself. In this case, the response represents an &amp;lsquo;idea&amp;rsquo; rather than an action.&lt;/p>&lt;/blockquote>
&lt;p>Essentially - the difference in position is about direct recording vs indirect &amp;ldquo;impressions&amp;rdquo;.&lt;/p>
&lt;h3 id="rosenblatts-rationale-for-selecting-a-connectionist-model-over-coded-representation">Rosenblatt&amp;rsquo;s Rationale for Selecting a Connectionist Model (over Coded Representation)
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Biology:&lt;/strong> Coded representation is &lt;em>precise&lt;/em>, &lt;em>definite&lt;/em>, and &lt;strong>rigid&lt;/strong> &amp;ndash; almost machine-like. Rosenblatt appreciated that different organisms remember things differently - learning from the same source! These individual variations in storage encouraged him to reject coded representation&lt;/li>
&lt;li>&lt;strong>Simplicity:&lt;/strong> Of the options available, the connectionist model is simpler and economical. So he favored such a model.&lt;/li>
&lt;li>&lt;strong>Probabilistic Pattern Matching:&lt;/strong> Rosenblatt noticed that humans and other creatures can match and work with images in diferent configurations, lighting, etc. That means - we are able to generalize the detection of objects upto an extent, classify them, and so on. He expected a more flexible model, rather than a rigid model to be able to perform this sort of work.&lt;/li>
&lt;li>&lt;strong>Recall is natural and direct in connectionist model:&lt;/strong> In the coded method - learning or retrieving information requires a special lookup process. In connectionist model, learning is merely response pathway, given a stimulus. A simpler model to get the same function.&lt;/li>
&lt;li>&lt;strong>Stronger Mathematical Basis:&lt;/strong> R embraced probabilistic models over deterministic ones from earlier (such as McCulloh-Pitts). He demonstrates how a random configuration of connections is able to achieve recognition (or learning).&lt;/li>
&lt;li>&lt;strong>Less Idealized, More biological model:&lt;/strong> He critiques earlier models - from McCulloh and Minsky - calling them too structured or algorithmic, whereas biological learning is &lt;strong>stochastic&lt;/strong>. Connectionism better aligns with real-world learning.&lt;/li>
&lt;/ul>
&lt;p>In short - R betted on &lt;strong>adaptive learning&lt;/strong> over &lt;strong>rigid storage&lt;/strong>.&lt;/p>
&lt;p>&lt;em>R shows that learning and memory are not different things - the connectionist model as a simpler model - collapses storage and learning into one!&lt;/em>&lt;/p></description></item><item><title>Mastery's Price: Paid in Life Itself</title><link>https://shrsv.github.io/p/1741373607/</link><pubDate>Fri, 07 Mar 2025 18:53:27 +0000</pubDate><guid>https://shrsv.github.io/p/1741373607/</guid><description>&lt;h2 id="mastery-demands-payment-in-life-units">Mastery Demands Payment in Life Units
&lt;/h2>&lt;p>Let&amp;rsquo;s think a bit about the 10,000 hour rule.&lt;/p>
&lt;p>It says that &lt;em>mastery&lt;/em> in a serious discipline demands a minimum
focused investment of around 10,000 hours in &lt;em>deliberate practice&lt;/em>.&lt;/p>
&lt;p>Deliberate practice means - finding benchmark behaviors, breaking
them down, and performing them consistently to get nearer
to perfection.&lt;/p>
&lt;p>10,000 hours roughly breaks down like this:&lt;/p>
&lt;ul>
&lt;li>9 years of effort, given 3 hours per day, 365 days a year&lt;/li>
&lt;li>13 years of effort, given 2 hours per day, 365 days a year&lt;/li>
&lt;li>27 years of effort, given 1 hour per day, 365 days year&lt;/li>
&lt;/ul>
&lt;p>These are staggering numbers - when we look at how short our lives
are.&lt;/p>
&lt;p>Half our lives - we are either sleeping or working on maintenance
tasks.&lt;/p>
&lt;p>The other half - we&amp;rsquo;re trapped in various maladies and difficulties&lt;/p>
&lt;ul>
&lt;li>and rarely give sufficient time and energy to deliberately get
better at something.&lt;/li>
&lt;/ul>
&lt;p>For most humans - mastering even 1 serious discipline is a lifetime
achievement.&lt;/p>
&lt;p>The vast majority of humans reach their graves having mastered not
a single serious discipline in their lives.&lt;/p>
&lt;p>That means, the vast majority of humans have never experienced
peak performance within themselves, they have never known what
it means to fulfill even a portion of their real potentials.&lt;/p>
&lt;h2 id="why-should-we-care-about-mastery">Why should we care about &amp;ldquo;Mastery&amp;rdquo;?
&lt;/h2>&lt;p>It may sound like a vague word invented by people with too much time
sometimes on their hands.&lt;/p>
&lt;p>But really - it isn&amp;rsquo;t.&lt;/p>
&lt;p>There are two sides to &amp;ldquo;Mastery&amp;rdquo;.&lt;/p>
&lt;p>First - the less important side: The social side.&lt;/p>
&lt;p>A masterful performance is usually judged in a social context.&lt;/p>
&lt;p>In any era - we have the top scientists, sportsmen, politicians,
actors, and so on.&lt;/p>
&lt;p>We have the historical greats, Newton, Einstein, Beethoven, and on
and on.&lt;/p>
&lt;p>We all know their names.&lt;/p>
&lt;p>They were much, much better than their contemporaries. Some of them
were better than anyone ever in their fields of expertise.&lt;/p>
&lt;p>It is sort of a social peak - and masters are at the top - in
their areas of expertise.&lt;/p>
&lt;p>But as I said - there are two sides to &amp;ldquo;Mastery&amp;rdquo;, and the social
side - of being at the top of list is of lesser importance.&lt;/p>
&lt;h2 id="the-more-important-side-of-mastery">The More Important Side of &amp;ldquo;Mastery&amp;rdquo;
&lt;/h2>&lt;p>The more important side of &amp;ldquo;Mastery&amp;rdquo; is that - it hits at the
core of what it means to be a human.&lt;/p>
&lt;p>You may look at the animal kingdom - you&amp;rsquo;ll find no adult animal practicing
getting better in any area of life, and trying to master it.&lt;/p>
&lt;p>There is no such effort.&lt;/p>
&lt;p>In humans - we can see a higher state and try for it. We understand
this term called &amp;ldquo;potential&amp;rdquo;.&lt;/p>
&lt;p>You know that if you keep practicing, and trying, you will eventually
get better - and the experience of life will change for you.&lt;/p>
&lt;p>That is the key driver for Mastery.&lt;/p>
&lt;p>And most importantly? The &lt;em>experience of mastery cannot be bought or
sold in the market&lt;/em>.&lt;/p>
&lt;p>Once you&amp;rsquo;ve mastered something - the experience you get out of it -
is solely your own. When performing - what you go through psychologically
cannot be counted through numbers.&lt;/p>
&lt;p>Nobody can buy your experience. Sure, they may hire you, they may associate
with you - but nobody can buy the experience of mastery.&lt;/p>
&lt;p>One struggles for a decade or more - and pay a hefty price in &lt;strong>time, effort
and emotions&lt;/strong> &amp;ndash; all for a simple experience of mastery.&lt;/p>
&lt;p>And no rich person, or a powerful person, can buy or grab it for themselves.&lt;/p>
&lt;p>The only currency through which mastery can be obtained is life itself.&lt;/p>
&lt;h2 id="what-mastery-stands-for-in-human-life">What Mastery Stands For in Human Life
&lt;/h2>&lt;p>The desire and effort for mastery in any area of human life stands for
intelligence, the human capacity for envisioning better states, and working
for it.&lt;/p>
&lt;p>It is waking up the inner human within the animal, and to help it guide
towards a higher potential.&lt;/p>
&lt;p>That is what Mastery means, and it is worth having a few words in our
vocabularies to remind ourselves of such a great potential.&lt;/p></description></item><item><title>Leadership: Action That Inspires</title><link>https://shrsv.github.io/p/1741287251/</link><pubDate>Thu, 06 Mar 2025 18:54:11 +0000</pubDate><guid>https://shrsv.github.io/p/1741287251/</guid><description>&lt;h2 id="a-definition-of-leadership">A Definition of Leadership
&lt;/h2>&lt;p>These days the word &lt;em>leadership&lt;/em> has become loaded with
many meanings, explanations, and imagery across various
media.&lt;/p>
&lt;p>But in its essence - leadership simply means &lt;em>to lead&lt;/em>.&lt;/p>
&lt;p>The roots of the word &lt;em>lead&lt;/em> emerge from an Old English word &lt;em>laeden&lt;/em>
which means &amp;ldquo;to go first, to guide&amp;rdquo;.&lt;/p>
&lt;p>Therefore - leadership is closely tied to:&lt;/p>
&lt;ol>
&lt;li>Taking action&lt;/li>
&lt;li>Taking action &lt;em>before others&lt;/em> (such that others &lt;em>follow&lt;/em>)&lt;/li>
&lt;/ol>
&lt;p>There is an inherent sense of adventure - in &amp;ldquo;going first&amp;rdquo;.&lt;/p>
&lt;p>But an even more important aspect of this is that - the direction
and action of the leader - encourage others to follow suit.&lt;/p>
&lt;p>Therefore in its elemental form: &lt;strong>Leadership is action that inspires
further action in others&lt;/strong>.&lt;/p>
&lt;h2 id="how-to-identify-leadership-potential">How to Identify Leadership Potential
&lt;/h2>&lt;p>While leadership at its core is about taking action and inspiring
others to do the same - let&amp;rsquo;s take a step back.&lt;/p>
&lt;p>Why does anyone take action?&lt;/p>
&lt;p>In day to day life, we see two types of actions:&lt;/p>
&lt;ol>
&lt;li>Asking&lt;/li>
&lt;li>Proposing&lt;/li>
&lt;/ol>
&lt;p>Usually - you are asking because you&amp;rsquo;re not sure what needs doing.&lt;/p>
&lt;p>Or maybe you don&amp;rsquo;t want to put in the work necessary to settle on
a direction.&lt;/p>
&lt;p>Getting more certainty often demands more action!&lt;/p>
&lt;p>If you&amp;rsquo;re low on energy or tired - you&amp;rsquo;re unlikely to make demands on
yourself
to get clarity or conviction.&lt;/p>
&lt;p>So those lacking conviction or those unwilling to act by themselves to
acquire conviction are usually the ones asking.&lt;/p>
&lt;ul>
&lt;li>&amp;ldquo;Shall I do X to solve Y?&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;p>Hidden under the questions like the above - we see that there&amp;rsquo;s no
conviction,
only a low-effort desire to find out what needs doing.&lt;/p>
&lt;p>However, the ones who lead aren&amp;rsquo;t asking these sorts of questions.&lt;/p>
&lt;p>Instead - they are doing the following:&lt;/p>
&lt;ol>
&lt;li>They&amp;rsquo;re experimenting and figuring things out to build personal
conviction.&lt;/li>
&lt;li>Once they have conviction - they are making proposals to others.&lt;/li>
&lt;li>They may seek inputs, suggestions, or support from others - but they are
in action, moving the agenda forward.&lt;/li>
&lt;/ol>
&lt;p>In short, future leaders are working to acquire conviction and then propose:&lt;/p>
&lt;ul>
&lt;li>&amp;ldquo;We must do X to solve Y. I will start with doing a part of X. Do you have
any suggestions on my proposal? Would you like to join me in this effort?&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;p>Look at the amount of extra effort needed to make a proposal:&lt;/p>
&lt;ul>
&lt;li>Studying the situation&lt;/li>
&lt;li>Taking action to deepen understanding&lt;/li>
&lt;li>Developing conviction&lt;/li>
&lt;li>Making a proposal to others&lt;/li>
&lt;li>Take comments, criticism, and include others in the agenda&lt;/li>
&lt;/ul>
&lt;h2 id="leadership-in-practice">Leadership in Practice
&lt;/h2>&lt;p>So what does it take to lead?&lt;/p>
&lt;p>One must continuously study the field and situation.&lt;/p>
&lt;p>And one must take action to validate one&amp;rsquo;s ideas and develop conviction.&lt;/p>
&lt;p>The conviction must then be used to fuel a compelling proposal.&lt;/p>
&lt;p>Finally, the proposal must be refined with the inputs from others&amp;hellip;&lt;/p>
&lt;p>And this will lead to a group acting together.&lt;/p>
&lt;p>But it all starts with an individual&amp;rsquo;s desire and willingness to act first.&lt;/p></description></item><item><title>Practical Focus: Saying "Not Now" Instead of "No"</title><link>https://shrsv.github.io/p/1741201733/</link><pubDate>Wed, 05 Mar 2025 19:08:53 +0000</pubDate><guid>https://shrsv.github.io/p/1741201733/</guid><description>&lt;p>People often say, &amp;ldquo;Focus is about saying No.&amp;rdquo;&lt;/p>
&lt;p>But experience tells us it is hard to say &amp;ldquo;no&amp;rdquo; to things we want to do.&lt;/p>
&lt;p>And every &amp;ldquo;no&amp;rdquo; that you muster chips away at your limited supply of willpower.&lt;/p>
&lt;p>So, how can we make focus practical?&lt;/p>
&lt;p>That is, what does it mean to arrange for practical focus?&lt;/p>
&lt;p>Replace &amp;ldquo;no&amp;rdquo; with &amp;ldquo;not now.&amp;rdquo;&lt;/p>
&lt;p>How?&lt;/p>
&lt;p>Many people have spoken and written about &amp;ldquo;time blocking.&amp;rdquo;&lt;/p>
&lt;p>The essence of &amp;ldquo;time blocking&amp;rdquo; is not to say &amp;ldquo;no,&amp;rdquo; but rather to adapt the phrase &amp;ldquo;not now.&amp;rdquo;&lt;/p>
&lt;ul>
&lt;li>Yes, you can watch a movie. But not now.&lt;/li>
&lt;li>Yes, you can kill time on YouTube. But not now.&lt;/li>
&lt;li>Yes, you can respond to chat/email. But not now.&lt;/li>
&lt;li>Yes, you can worry about 1000 things not going the way you want. But not now.&lt;/li>
&lt;/ul>
&lt;p>See how simple it is?&lt;/p>
&lt;p>You don&amp;rsquo;t have to outright reject a low-value activity.&lt;/p>
&lt;p>You just have to delay it.&lt;/p>
&lt;p>And many times, if you succeed in delaying it, you&amp;rsquo;ll also succeed in rejecting it.&lt;/p>
&lt;p>In more positive terms, time blocking means the following:&lt;/p>
&lt;ul>
&lt;li>A duration (4 hours of time, starting now)&lt;/li>
&lt;li>The most important thing that deserves your focus&lt;/li>
&lt;li>A defensive fortification mantra called &amp;ldquo;not now&amp;rdquo; directed at every distraction&lt;/li>
&lt;/ul></description></item><item><title>A Simple Tool To Quickly Find API Entry Points Across All Your Repositories</title><link>https://shrsv.github.io/p/a-simple-tool-to-quickly-find-api-entry-points-across-all-your-repositories/</link><pubDate>Wed, 05 Mar 2025 23:43:58 +0530</pubDate><guid>https://shrsv.github.io/p/a-simple-tool-to-quickly-find-api-entry-points-across-all-your-repositories/</guid><description>&lt;p>Imagine you’re deep in a coding session, cruising through your repository, when bam—you hit an API reference that stops you cold.&lt;/p>
&lt;p>You’ve got no idea where it lives, and now you’re stuck.&lt;/p>
&lt;p>Sound familiar? That’s the pain I want to talk about today, and how a tool I’ve been tinkering with—LiveAPI—tackles it head-on.&lt;/p>
&lt;p>This isn’t just about saving time; it’s about keeping your flow intact and your sanity in check.&lt;/p>
&lt;p>Let’s break it down.&lt;/p>
&lt;h2 id="the-problem">The Problem
&lt;/h2>&lt;p>Picture this: you’re in &lt;strong>repository R1&lt;/strong>, poking around in &lt;strong>file F1&lt;/strong>, line &lt;strong>L1&lt;/strong>, and you spot a call to some API route—like &lt;code>/users/{id}/profile&lt;/code>. Cool, but where does it come from? Is it in this repo? Another one? You’ve got a hunch it’s &lt;em>somewhere&lt;/em> in your sprawling codebase, but pinning it down feels like searching for a needle in a haystack.&lt;/p>
&lt;p>Here’s what usually happens:&lt;/p>
&lt;ul>
&lt;li>You grep through the current repo. Nothing.&lt;/li>
&lt;li>You vaguely recall seeing it in &lt;strong>repository R2&lt;/strong>, maybe in &lt;strong>file F2&lt;/strong>, around &lt;strong>line L2&lt;/strong>—but you’re not sure.&lt;/li>
&lt;li>You dig through docs (if they exist), Slack threads, or—worst case—ping a colleague who’s just as busy as you.&lt;/li>
&lt;/ul>
&lt;p>This isn’t just annoying; it’s a &lt;strong>flow killer&lt;/strong>.&lt;/p>
&lt;p>You’re yanked out of your groove, wasting minutes (or hours) chasing down a single endpoint.&lt;/p>
&lt;p>Sometimes you figure it out, sometimes you don’t, but either way, it’s a disruption.&lt;/p>
&lt;p>Multiply that by dozens of APIs across multiple repos, and you’ve got a productivity nightmare.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Pain Point&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Impact&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Unclear API location&lt;/td>
&lt;td>Breaks focus, slows momentum&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Vague recollection&lt;/td>
&lt;td>Extra mental load to recall&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Manual hunting&lt;/td>
&lt;td>Time sink, inconsistent results&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bothering colleagues&lt;/td>
&lt;td>Delays, team friction&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="how-liveapi-solves-the-problem">How LiveAPI Solves the Problem
&lt;/h2>&lt;p>Enter &lt;strong>LiveAPI&lt;/strong>, a tool built to cut through this mess.&lt;/p>
&lt;p>It’s not some lightweight script—it’s an &lt;strong>infrastructure-scale solution&lt;/strong> designed to map out all your REST backend APIs across every repository you throw at it.&lt;/p>
&lt;p>Whether you’ve got dozens, hundreds, or even thousands of repos, LiveAPI’s got your back.&lt;/p>
&lt;p>Here’s the magic:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Broad coverage&lt;/strong>: We support the &lt;strong>top 15 languages&lt;/strong> and &lt;strong>60+ frameworks&lt;/strong>. Python with Flask? Java with Spring? Node.js with Express? You name it, we handle it.&lt;/li>
&lt;li>&lt;strong>Real-time tracking&lt;/strong>: LiveAPI watches your repos for changes. If an endpoint gets updated, added, or axed, it stays in sync—no stale data here.&lt;/li>
&lt;li>&lt;strong>Fast search&lt;/strong>: Need to find &lt;code>/users/{id}/profile&lt;/code>? Type it in, and LiveAPI spits out the exact endpoint, parameters, and even a description if you’ve got one documented.&lt;/li>
&lt;li>&lt;strong>Source code links&lt;/strong>: One click, and you’re at the exact file and line—like jumping from &lt;strong>R1, F1, L1&lt;/strong> to &lt;strong>R2, F2, L2&lt;/strong> without breaking a sweat.&lt;/li>
&lt;/ul>
&lt;p>Think of it like a GPS for your APIs.&lt;/p>
&lt;p>Instead of fumbling through repos or bugging your teammate, you get a clean, instant path to the source.&lt;/p>
&lt;p>Here’s a quick example of what you might see:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Search Query&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Result&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Source&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>/users/{id}/profile&lt;/code>&lt;/td>
&lt;td>GET endpoint, returns user profile&lt;/td>
&lt;td>&lt;code>R2/F2#L2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>POST /auth/login&lt;/code>&lt;/td>
&lt;td>Authenticates user, returns token&lt;/td>
&lt;td>&lt;code>R3/F5#L12&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;img src="https://shrsv.github.io/p/a-simple-tool-to-quickly-find-api-entry-points-across-all-your-repositories/WhereIsMyAPI.png"
width="1000"
height="634"
srcset="https://shrsv.github.io/p/a-simple-tool-to-quickly-find-api-entry-points-across-all-your-repositories/WhereIsMyAPI_hu_538eb43a4f219a67.png 480w, https://shrsv.github.io/p/a-simple-tool-to-quickly-find-api-entry-points-across-all-your-repositories/WhereIsMyAPI_hu_1faf85c80566259e.png 1024w"
loading="lazy"
alt="Where is My API"
class="gallery-image"
data-flex-grow="157"
data-flex-basis="378px"
>&lt;/p>
&lt;p>This is one of the visuals I’ve got—it’s a crisp look at how LiveAPI ties an endpoint to its origin in one glance.&lt;/p>
&lt;h2 id="roadmap-to-improve-developer-experience">Roadmap to Improve Developer Experience
&lt;/h2>&lt;p>LiveAPI’s already pretty handy, but we’re not stopping there.&lt;/p>
&lt;p>Here’s what’s cooking to make it even better:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Intelligent chat&lt;/strong>: Search is great, but what if you could &lt;em>talk&lt;/em> to your API map? We’re exploring a chat interface where you can ask things like, “Which endpoints handle user auth?” and get a conversational breakdown. It’s about building on your infrastructure, not just finding it.&lt;/li>
&lt;li>&lt;strong>IDE extensions&lt;/strong>: Imagine right-clicking an API call in your editor and pulling up its details without leaving your context. We’re working on plugins for VS Code, IntelliJ, and others to make that a reality.&lt;/li>
&lt;li>&lt;strong>Accuracy &amp;amp; reliability&lt;/strong>: We’re testing and tweaking every day. The goal? Make sure LiveAPI catches every endpoint, every change, every time—no misses, no lag.&lt;/li>
&lt;/ul>
&lt;p>The focus is on keeping it seamless.&lt;/p>
&lt;p>You shouldn’t have to think about the tool; it should just work when you need it.&lt;/p>
&lt;h2 id="how-liveapi-solves-the-entry-point-problem-reiterate">How LiveAPI Solves the Entry Point Problem (Reiterate)
&lt;/h2>&lt;p>Let’s circle back to that core headache: finding where your APIs live.&lt;/p>
&lt;p>LiveAPI doesn’t just slap a band-aid on it—it &lt;strong>rewrites the game&lt;/strong>.&lt;/p>
&lt;p>By indexing every REST endpoint across all your repos, it turns a scattered hunt into a single, confident click.&lt;/p>
&lt;p>Say you’re staring at that &lt;code>/users/{id}/profile&lt;/code> call again. With LiveAPI:&lt;/p>
&lt;ol>
&lt;li>Punch it into the search.&lt;/li>
&lt;li>See the endpoint, its params, and a link to &lt;strong>R2, F2, L2&lt;/strong>.&lt;/li>
&lt;li>Jump straight there—no grep, no guesswork, no Slack pings.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://shrsv.github.io/p/a-simple-tool-to-quickly-find-api-entry-points-across-all-your-repositories/WhereIsMyAPISolution.png"
width="1000"
height="634"
srcset="https://shrsv.github.io/p/a-simple-tool-to-quickly-find-api-entry-points-across-all-your-repositories/WhereIsMyAPISolution_hu_a23c903f7cd20205.png 480w, https://shrsv.github.io/p/a-simple-tool-to-quickly-find-api-entry-points-across-all-your-repositories/WhereIsMyAPISolution_hu_6745ccea11f02f1d.png 1024w"
loading="lazy"
alt="Where is My API - LiveAPI Knows"
class="gallery-image"
data-flex-grow="157"
data-flex-basis="378px"
>
This second image nails it—showing the leap from query to code in action.&lt;/p>
&lt;p>It’s not just about speed (though it’s fast).&lt;/p>
&lt;p>It’s about &lt;strong>staying in the zone&lt;/strong>.&lt;/p>
&lt;p>No more context-switching or mental juggling.&lt;/p>
&lt;p>Whether you’re debugging, onboarding, or just curious, LiveAPI hands you the keys to your API kingdom.&lt;/p>
&lt;h2 id="wrapping-up">Wrapping Up
&lt;/h2>&lt;p>If you’re tired of playing API hide-and-seek across your repositories, give LiveAPI a spin.&lt;/p>
&lt;p>It’s built for developers like us—people who want answers fast and flow uninterrupted.&lt;/p>
&lt;p>Check out the &lt;a class="link" href="https://hexmos.com/liveapi" target="_blank" rel="noopener"
>LiveAPI site&lt;/a> for more, or drop a comment if you’ve got ideas to make it even better.&lt;/p>
&lt;p>What’s your biggest API related horror story? I’d love to hear it.&lt;/p></description></item><item><title>LiveAPI Rebuilt: A Scalable and Reliable API Documentation Tool</title><link>https://shrsv.github.io/p/1741111626/</link><pubDate>Tue, 04 Mar 2025 18:07:06 +0000</pubDate><guid>https://shrsv.github.io/p/1741111626/</guid><description>&lt;p>Hi there! I&amp;rsquo;m Shrijith Venkatrama, founder of Hexmos. Right now, I’m building &lt;a class="link" href="https://hexmos.com/liveapi" target="_blank" rel="noopener"
>LiveAPI&lt;/a>, a tool designed to make generating API documentation from your code incredibly easy.&lt;/p>
&lt;p>Over the past few months, we’ve been hard at work refining LiveAPI to be more robust, scalable, and user-friendly. Here’s a look at what we’ve been up to.&lt;/p>
&lt;h2 id="what-we-did-in-november-and-december">What We Did in November and December
&lt;/h2>&lt;p>Towards the end of last year, we ramped up our outreach efforts, connecting with engineering leaders, CTOs, technical freelancers, and experienced developers. Many of them were generous enough to try out LiveAPI and provide us with invaluable feedback.&lt;/p>
&lt;p>We closely observed how users onboarded, interacted with, and benefited from LiveAPI. What became clear was that while the concept was strong, the product needed significant improvements before it could truly serve the needs of professional developers. With that realization, we dedicated the past three months to making fundamental enhancements.&lt;/p>
&lt;h2 id="identifying-key-issues">Identifying Key Issues
&lt;/h2>&lt;p>Through our interactions and testing, we uncovered several major pain points:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Handling Large Codebases&lt;/strong>: Many users experienced failures when processing large repositories, making the tool impractical for sizable projects.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Challenges with Multi-Project Repos&lt;/strong>: Codebases structured as monorepos or with multiple subprojects often encountered errors.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Pricing Concerns&lt;/strong>: Users expressed a preference for API-count-based pricing rather than a repository-based model.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lack of Framework Support&lt;/strong>: Several critical frameworks were missing from our compatibility list, limiting adoption.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Accuracy Issues&lt;/strong>: Due to size limitations, the accuracy of generated documentation was sometimes inconsistent.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Unstable LLM API Calls&lt;/strong>: Intermittent failures occurred when making LLM-based API calls, and we lacked a robust retry mechanism.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Uninspiring Documentation Design&lt;/strong>: The generated documentation needed a more polished, professional, and visually appealing design.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="re-architecting-liveapi-the-solution">Re-Architecting LiveAPI: The Solution
&lt;/h2>&lt;p>Initially, we thought we could address these issues with incremental fixes. However, as we dug deeper, it became clear that a more fundamental overhaul was necessary. Over the past three months, we completely re-architected LiveAPI’s backend to build a more stable and scalable system.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Event-Driven Architecture&lt;/strong>: We transitioned to a fully event-driven approach, ensuring better scalability and responsiveness.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Redis-Powered Queues and Streams&lt;/strong>: We adopted Redis to efficiently manage queues, data structures, events, and streams, significantly improving performance.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Reliable LLM Interactions&lt;/strong>: We developed new mechanisms to enhance the reliability of LLM-based API calls, minimizing failures and improving consistency.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Scalability for Large Repos&lt;/strong>: We tackled repository size limitations, enabling us to generate documentation for 150-200 APIs per project with ease. This number is expected to grow further as our optimizations continue.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Future-Proof Infrastructure&lt;/strong>: The event-driven architecture allows us to scale dynamically based on demand, ensuring a seamless experience for users.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Enhanced Documentation Design&lt;/strong>: Improving the documentation layout and visual appeal required a steep learning curve for our team, but the result is a much more engaging and professional output.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="the-new-and-improved-liveapi-whats-next">The New and Improved LiveAPI: What’s Next?
&lt;/h2>&lt;p>With these changes in place, LiveAPI now offers:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Higher Reliability&lt;/strong>: Automated document generation is now far more stable and dependable.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Better Support for Large Repositories&lt;/strong>: Even complex, multi-project repos can be processed with ease.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Visually Appealing Documentation&lt;/strong>: The new design makes API documentation more readable and professional.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Improved Accuracy&lt;/strong>: The enhancements result in more precise and complete API documentation.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Support 60+ Frameworks&lt;/strong>: We now support the top 15 languages and around 60 frameworks within them&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>We’re incredibly excited about these improvements and can’t wait to share them with our users. Stay tuned for the official release of the new LiveAPI, and if you haven’t tried it yet, now’s a great time to check it out!&lt;/p></description></item><item><title>Don't Add More Garbage to the World</title><link>https://shrsv.github.io/p/1741028143/</link><pubDate>Mon, 03 Mar 2025 18:55:43 +0000</pubDate><guid>https://shrsv.github.io/p/1741028143/</guid><description>&lt;p>Steve Jobs said taste is paramount to business leaders who wish to do well.&lt;/p>
&lt;p>I think that&amp;rsquo;s a bit too abstract to put into practice on a day-to-day
basis.&lt;/p>
&lt;p>Instead, I prefer thinking of it this way: &amp;ldquo;Let&amp;rsquo;s not put more garbage
into the world.&amp;rdquo;&lt;/p>
&lt;p>That is, it is a virtue to be critical about one&amp;rsquo;s own works.&lt;/p>
&lt;p>When our standards are high, and we refuse to pollute the lives of others
due to greed, impatience, and such vices, we automatically imbibe &amp;ldquo;taste.&amp;rdquo;&lt;/p>
&lt;p>No esoteric or mystical skill required this way.&lt;/p></description></item><item><title>Learning is Movement</title><link>https://shrsv.github.io/p/1741024971/</link><pubDate>Mon, 03 Mar 2025 18:03:05 +0000</pubDate><guid>https://shrsv.github.io/p/1741024971/</guid><description>&lt;p>Learning is movement, radical change. It is not about sitting still and absorbing information. It is about moving forward and making things happen.&lt;/p></description></item><item><title>Focusing Questions: The Key to Getting Things Done</title><link>https://shrsv.github.io/p/1740944326/</link><pubDate>Sun, 02 Mar 2025 19:38:46 +0000</pubDate><guid>https://shrsv.github.io/p/1740944326/</guid><description>&lt;p>There are essentially two types of people: those who are successful and those who ask &lt;strong>defocusing&lt;/strong> questions.&lt;/p>
&lt;p>A &lt;strong>defocusing&lt;/strong> question is something like: &amp;ldquo;What can I do about this?&amp;rdquo;. This creates a huge list of busywork for you – which keeps you running around for a long time with very little results to show for it.&lt;/p>
&lt;p>Instead, try a &lt;strong>FOCUSING&lt;/strong> question: &amp;ldquo;What is &lt;strong>ONE&lt;/strong> thing if I do, everything else becomes easier or irrelevant?&amp;rdquo;&lt;/p>
&lt;p>You have to be really careful about it. If you pick an actually important thing, your life will become so much better because of this.&lt;/p></description></item><item><title>A Friendly Step-by-Step Tutorial on the Vanishing Gradient Problem</title><link>https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/</link><pubDate>Sat, 01 Mar 2025 22:46:54 +0530</pubDate><guid>https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/</guid><description>&lt;hr>
&lt;p>&lt;em>Hi there! I&amp;rsquo;m Shrijith Venkatrama, founder of Hexmos. Right now, I’m building &lt;a class="link" href="https://hexmos.com/liveapi" target="_blank" rel="noopener"
>LiveAPI&lt;/a>, a tool that makes generating API docs from your code ridiculously easy.&lt;/em>&lt;/p>
&lt;hr>
&lt;p>In this hands-on tutorial, we’re going to explore the vanishing gradient problem in deep neural networks—a tricky issue that can slow down or even stop learning in early layers.&lt;/p>
&lt;p>You can run the sample code in a Jupyter Notebook, see diagrams, and have those &amp;ldquo;aha!&amp;rdquo; moments as we go.&lt;/p>
&lt;p>We’ll use Python with NumPy (and a touch of PyTorch later) to keep things clear and practical.&lt;/p>
&lt;p>By the end, you’ll also see how the ReLU activation function can save the day!&lt;/p>
&lt;p>Let’s dive in, step by step, with bite-sized code snippets and plenty of explanations then.&lt;/p>
&lt;h2 id="setting-up-your-environment">Setting Up Your Environment
&lt;/h2>&lt;p>First, let’s get our tools ready. We’ll use NumPy for calculations and Matplotlib for visualizations. Open a Jupyter Notebook and run this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">matplotlib.pyplot&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">plt&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now, let’s define the &lt;strong>sigmoid activation function&lt;/strong> and its derivative, since they’re central to understanding the vanishing gradient problem.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">sigmoid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">exp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">sigmoid_derivative&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">sigmoid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">sigmoid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>What’s Happening?&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>The sigmoid function squashes any input into a range between 0 and 1.&lt;/li>
&lt;li>Its derivative (which we’ll use in backpropagation) is always small—its maximum value is 0.25. This tiny derivative is a big clue to why gradients vanish!&lt;/li>
&lt;/ul>
&lt;p>Let’s visualize sigmoid and its derivative to get a feel for them:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">linspace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sigmoid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Sigmoid&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sigmoid_derivative&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Derivative&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">legend&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Sigmoid and Its Derivative&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xlabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Input&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ylabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Output&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/1.png"
width="567"
height="455"
srcset="https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/1_hu_35656147a585a8f1.png 480w, https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/1_hu_a759326a9cc30e18.png 1024w"
loading="lazy"
alt="Sigmoid and Derivative"
class="gallery-image"
data-flex-grow="124"
data-flex-basis="299px"
>&lt;/p>
&lt;p>&lt;strong>Aha Moment&lt;/strong>:&lt;/p>
&lt;p>Notice how the derivative peaks at 0.25 and drops to near 0 for large positive or negative inputs. When we multiply these small values across layers, gradients can shrink fast.&lt;/p>
&lt;h2 id="building-a-tiny-neural-network">Building a Tiny Neural Network
&lt;/h2>&lt;p>Let’s create a simple network with:&lt;/p>
&lt;ul>
&lt;li>1 input neuron (value = 0.5)&lt;/li>
&lt;li>2 hidden layers (1 neuron each)&lt;/li>
&lt;li>1 output neuron (target = 0.8)&lt;/li>
&lt;/ul>
&lt;p>We’ll set all weights to 0.5 and biases to 0 for simplicity.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Input and target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">input_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">target_output&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mf">0.8&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Weights and biases&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">weights1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">]])&lt;/span> &lt;span class="c1"># Input to Hidden Layer 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">bias1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">weights2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">]])&lt;/span> &lt;span class="c1"># Hidden Layer 1 to Hidden Layer 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">bias2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">weights3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">]])&lt;/span> &lt;span class="c1"># Hidden Layer 2 to Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">bias3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/5.png"
width="646"
height="70"
srcset="https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/5_hu_4897fdf706a4c381.png 480w, https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/5_hu_c820247fc86e721.png 1024w"
loading="lazy"
alt="layers"
class="gallery-image"
data-flex-grow="922"
data-flex-basis="2214px"
>&lt;/p>
&lt;p>Each arrow has a weight of 0.5, and each neuron uses the sigmoid function&lt;/p>
&lt;h2 id="forward-passmaking-a-prediction">Forward Pass—Making a Prediction
&lt;/h2>&lt;p>Let’s compute the output step by step. Run each line and see how the signal flows:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Hidden Layer 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">layer1_input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">weights1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">input_data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">bias1&lt;/span> &lt;span class="c1"># 0.5 * 0.5 + 0 = 0.25&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">layer1_output&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sigmoid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">layer1_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ≈ 0.562&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Hidden Layer 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">layer2_input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">weights2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">layer1_output&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">bias2&lt;/span> &lt;span class="c1"># 0.5 * 0.562 ≈ 0.281&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">layer2_output&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sigmoid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">layer2_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ≈ 0.570&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Output Layer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output_input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">weights3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">layer2_output&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">bias3&lt;/span> &lt;span class="c1"># 0.5 * 0.570 ≈ 0.285&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sigmoid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">output_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ≈ 0.571&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Predicted Output: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">.3f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, Target: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">target_output&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Aha Moment&lt;/strong>:&lt;br>
Our prediction (≈ 0.571) is way off the target (0.8). We need to adjust the weights, but that depends on gradients. Let’s see if they’re strong enough to help!&lt;/p>
&lt;h2 id="compute-the-loss">Compute the Loss
&lt;/h2>&lt;p>Let’s measure how bad our prediction is using mean squared error:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">loss&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">power&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">output&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">target_output&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Loss: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">loss&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">.3f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Plot the loss:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">figure&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">figsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">loss&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="s1">&amp;#39;ro&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Loss&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ylabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Loss Value&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/2.png"
width="398"
height="297"
srcset="https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/2_hu_f60de9cd2513abb8.png 480w, https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/2_hu_a385227eaa473559.png 1024w"
loading="lazy"
alt="Loss"
class="gallery-image"
data-flex-grow="134"
data-flex-basis="321px"
>&lt;/p>
&lt;p>&lt;strong>What’s Happening?&lt;/strong>&lt;/p>
&lt;p>The loss (≈ 0.026) shows our error. Backpropagation will use gradients to reduce this, but let’s see if those gradients hold up.&lt;/p>
&lt;h2 id="backward-pass---where-gradients-vanish">Backward Pass - Where Gradients Vanish
&lt;/h2>&lt;p>Now, we’ll calculate gradients starting from the output and moving backward. This is where the vanishing gradient problem shows up!&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Output Layer Gradients&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">d_loss_d_output&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">output&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">target_output&lt;/span> &lt;span class="c1"># ≈ -0.229&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">d_loss_d_output_input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d_loss_d_output&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">sigmoid_derivative&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">output_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ≈ -0.056&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">gradient_weights3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d_loss_d_output_input&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">layer2_output&lt;/span> &lt;span class="c1"># ≈ -0.032&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Hidden Layer 2 Gradients&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">error_layer2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">weights3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d_loss_d_output_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ≈ -0.028&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">d_loss_d_layer2_input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">error_layer2&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">sigmoid_derivative&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">layer2_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ≈ -0.007&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">gradient_weights2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d_loss_d_layer2_input&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">layer1_output&lt;/span> &lt;span class="c1"># ≈ -0.004&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Hideen Layer 1 Gradients&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">error_layer1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">weights2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d_loss_d_layer2_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ≈ -0.0035&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">d_loss_d_layer1_input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">error_layer1&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">sigmoid_derivative&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">layer1_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ≈ -0.00085&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">gradient_weights1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d_loss_d_layer1_input&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">input_data&lt;/span> &lt;span class="c1"># ≈ -0.000425&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Aha Moment&lt;/strong>:&lt;br>
Look at the gradient sizes:&lt;/p>
&lt;ul>
&lt;li>Output layer: ≈ -0.032&lt;/li>
&lt;li>Hidden Layer 2: ≈ -0.004&lt;/li>
&lt;li>Hidden Layer 1: ≈ -0.000425&lt;/li>
&lt;/ul>
&lt;p>They’re shrinking fast! Let’s plot them:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">gradients&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gradient_weights1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gradient_weights2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gradient_weights3&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">layers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Layer 1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Layer 2&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Layer 3&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">layers&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">gradients&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Gradient Magnitudes with Sigmoid&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ylabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Magnitude&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/3.png"
width="584"
height="435"
srcset="https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/3_hu_17897e57a52e97f3.png 480w, https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/3_hu_a33f28e19034f0f9.png 1024w"
loading="lazy"
alt="Gradient Magnitudes"
class="gallery-image"
data-flex-grow="134"
data-flex-basis="322px"
>&lt;/p>
&lt;p>&lt;strong>Insight&lt;/strong>:&lt;br>
The deeper we go (toward Layer 1), the tinier the gradients get. This is the vanishing gradient problem—early layers barely learn because their updates are so small!&lt;/p>
&lt;h2 id="why-do-gradients-vanish">Why Do Gradients Vanish?
&lt;/h2>&lt;p>Here’s the key: each gradient is multiplied by the sigmoid derivative (max 0.25). Across layers, it’s like:&lt;/p>
&lt;ul>
&lt;li>Layer 3: gradient&lt;/li>
&lt;li>Layer 2: gradient × &amp;lt;0.25&lt;/li>
&lt;li>Layer 1: gradient × &amp;lt;0.25 × &amp;lt;0.25&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Intuition&lt;/strong>:&lt;br>
Imagine passing a message through a chain of people, each whispering quieter. By the time it reaches the start, it’s almost silent. That’s what’s happening to our gradients!&lt;/p>
&lt;h2 id="how-relu-solves-the-vanishing-gradient-problem">How ReLU Solves the Vanishing Gradient Problem
&lt;/h2>&lt;p>Let’s switch to &lt;strong>ReLU&lt;/strong> (Rectified Linear Unit), defined as:&lt;/p>
$$ReLU(x) = max⁡(0,x)$$&lt;p>with a derivative of 1 for $x&amp;gt;0$. This doesn’t shrink gradients! Let’s define it:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">relu&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">maximum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">relu_derivative&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="relu-forward-pass">ReLU Forward Pass
&lt;/h3>&lt;p>Redo the forward pass with ReLU:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">layer1_input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">weights1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">input_data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">bias1&lt;/span> &lt;span class="c1"># 0.25&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">layer1_output&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">relu&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">layer1_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 0.25 (since 0.25 &amp;gt; 0)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">layer2_input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">weights2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">layer1_output&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">bias2&lt;/span> &lt;span class="c1"># 0.5 * 0.25 = 0.125&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">layer2_output&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">relu&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">layer2_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 0.125&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output_input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">weights3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">layer2_output&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">bias3&lt;/span> &lt;span class="c1"># 0.5 * 0.125 = 0.0625&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">relu&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">output_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 0.0625&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;ReLU Output: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">.4f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>:&lt;br>
For simplicity, we used ReLU everywhere. In practice, the output layer might be linear for regression, but this shows the idea.&lt;/p>
&lt;h3 id="relu-backward-pass">ReLU Backward Pass
&lt;/h3>&lt;p>Now, compute gradients:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">d_loss_d_output&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">output&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">target_output&lt;/span> &lt;span class="c1"># 0.0625 - 0.8 ≈ -0.7375&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">d_loss_d_output_input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d_loss_d_output&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">relu_derivative&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">output_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># -0.7375 * 1 = -0.7375&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">gradient_weights3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d_loss_d_output_input&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">layer2_output&lt;/span> &lt;span class="c1"># ≈ -0.0922&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">error_layer2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">weights3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d_loss_d_output_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ≈ -0.36875&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">d_loss_d_layer2_input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">error_layer2&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">relu_derivative&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">layer2_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ≈ -0.36875&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">gradient_weights2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d_loss_d_layer2_input&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">layer1_output&lt;/span> &lt;span class="c1"># ≈ -0.0922&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">error_layer1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">weights2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d_loss_d_layer2_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ≈ -0.184375&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">d_loss_d_layer1_input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">error_layer1&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">relu_derivative&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">layer1_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ≈ -0.184375&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">gradient_weights1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">d_loss_d_layer1_input&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">input_data&lt;/span> &lt;span class="c1"># ≈ -0.0922&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Aha Moment&lt;/strong>:&lt;br>
Check the gradients:&lt;/p>
&lt;ul>
&lt;li>Layer 3: ≈ -0.0922&lt;/li>
&lt;li>Layer 2: ≈ -0.0922&lt;/li>
&lt;li>Layer 1: ≈ -0.0922&lt;/li>
&lt;/ul>
&lt;p>They’re all the same size! Plot them:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">gradients_relu&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gradient_weights1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gradient_weights2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gradient_weights3&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">layers&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">gradients_relu&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Gradient Magnitudes with ReLU&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ylabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Magnitude&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/4.png"
width="576"
height="435"
srcset="https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/4_hu_eb517843162895e2.png 480w, https://shrsv.github.io/p/a-friendly-step-by-step-tutorial-on-the-vanishing-gradient-problem/4_hu_831baee1c8c2e440.png 1024w"
loading="lazy"
alt="ReLU Gradient Magnitudes"
class="gallery-image"
data-flex-grow="132"
data-flex-basis="317px"
>&lt;/p>
&lt;p>&lt;strong>Insight&lt;/strong>:&lt;br>
ReLU’s derivative of 1 (for positive inputs) keeps gradients strong, so early layers can learn just as well as later ones. No vanishing here!&lt;/p>
&lt;h2 id="bonus-trying-it-with-pytorch">Bonus: Trying it With PyTorch
&lt;/h2>&lt;p>Let’s quickly see this with PyTorch for a modern twist. Install PyTorch if you haven’t (pip install torch), then run:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">torch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Define inputs and weights as tensors with gradients&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tensor&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">]],&lt;/span> &lt;span class="n">requires_grad&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tensor&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mf">0.8&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">w1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tensor&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">]],&lt;/span> &lt;span class="n">requires_grad&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">w2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tensor&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">]],&lt;/span> &lt;span class="n">requires_grad&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">w3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tensor&lt;/span>&lt;span class="p">([[&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">]],&lt;/span> &lt;span class="n">requires_grad&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Forward pass with sigmoid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">h1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sigmoid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w1&lt;/span> &lt;span class="o">@&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">h2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sigmoid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w2&lt;/span> &lt;span class="o">@&lt;/span> &lt;span class="n">h1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">out&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sigmoid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w3&lt;/span> &lt;span class="o">@&lt;/span> &lt;span class="n">h2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Loss&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">loss&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">**&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">loss&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">backward&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Print gradients&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Gradient w1: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">w1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grad&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">.6f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Gradient w2: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">w2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grad&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">.6f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Gradient w3: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">w3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grad&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">.6f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Output&lt;/strong>:&lt;/p>
&lt;div class="goat svg-container ">
&lt;svg
xmlns="http://www.w3.org/2000/svg"
font-family="Menlo,Lucida Console,monospace"
viewBox="0 0 184 57"
>
&lt;g transform='translate(8,16)'>
&lt;text text-anchor='middle' x='0' y='4' fill='currentColor' style='font-size:1em'>G&lt;/text>
&lt;text text-anchor='middle' x='0' y='20' fill='currentColor' style='font-size:1em'>G&lt;/text>
&lt;text text-anchor='middle' x='0' y='36' fill='currentColor' style='font-size:1em'>G&lt;/text>
&lt;text text-anchor='middle' x='8' y='4' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='8' y='20' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='8' y='36' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='16' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='16' y='20' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='16' y='36' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='24' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='24' y='36' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='32' y='4' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='32' y='36' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='40' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='40' y='36' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='48' y='4' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='48' y='36' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='56' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='56' y='36' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='72' y='4' fill='currentColor' style='font-size:1em'>w&lt;/text>
&lt;text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>w&lt;/text>
&lt;text text-anchor='middle' x='72' y='36' fill='currentColor' style='font-size:1em'>w&lt;/text>
&lt;text text-anchor='middle' x='80' y='4' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='80' y='36' fill='currentColor' style='font-size:1em'>3&lt;/text>
&lt;text text-anchor='middle' x='88' y='4' fill='currentColor' style='font-size:1em'>:&lt;/text>
&lt;text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>:&lt;/text>
&lt;text text-anchor='middle' x='88' y='36' fill='currentColor' style='font-size:1em'>:&lt;/text>
&lt;text text-anchor='middle' x='104' y='4' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='104' y='36' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='112' y='4' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='112' y='36' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='120' y='4' fill='currentColor' style='font-size:1em'>.&lt;/text>
&lt;text text-anchor='middle' x='120' y='20' fill='currentColor' style='font-size:1em'>.&lt;/text>
&lt;text text-anchor='middle' x='120' y='36' fill='currentColor' style='font-size:1em'>.&lt;/text>
&lt;text text-anchor='middle' x='128' y='4' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='128' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='128' y='36' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='136' y='4' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='136' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='136' y='36' fill='currentColor' style='font-size:1em'>3&lt;/text>
&lt;text text-anchor='middle' x='144' y='4' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>3&lt;/text>
&lt;text text-anchor='middle' x='144' y='36' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='152' y='4' fill='currentColor' style='font-size:1em'>4&lt;/text>
&lt;text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>8&lt;/text>
&lt;text text-anchor='middle' x='152' y='36' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='160' y='4' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>7&lt;/text>
&lt;text text-anchor='middle' x='160' y='36' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='168' y='4' fill='currentColor' style='font-size:1em'>4&lt;/text>
&lt;text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='168' y='36' fill='currentColor' style='font-size:1em'>4&lt;/text>
&lt;/g>
&lt;/svg>
&lt;/div>
&lt;p>You’ll see gradients shrinking from w3 to w1, just like before. Now try ReLU:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Reset gradients&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">w1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grad&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">w2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grad&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">w3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grad&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Forward pass with ReLU&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">h1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">relu&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w1&lt;/span> &lt;span class="o">@&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">h2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">relu&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w2&lt;/span> &lt;span class="o">@&lt;/span> &lt;span class="n">h1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">out&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">torch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">relu&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w3&lt;/span> &lt;span class="o">@&lt;/span> &lt;span class="n">h2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Loss and backward&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">loss&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">**&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">loss&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">backward&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;ReLU Gradient w1: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">w1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grad&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">.6f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;ReLU Gradient w2: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">w2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grad&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">.6f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;ReLU Gradient w3: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">w3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grad&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">.6f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Output:&lt;/p>
&lt;div class="goat svg-container ">
&lt;svg
xmlns="http://www.w3.org/2000/svg"
font-family="Menlo,Lucida Console,monospace"
viewBox="0 0 224 57"
>
&lt;g transform='translate(8,16)'>
&lt;text text-anchor='middle' x='0' y='4' fill='currentColor' style='font-size:1em'>R&lt;/text>
&lt;text text-anchor='middle' x='0' y='20' fill='currentColor' style='font-size:1em'>R&lt;/text>
&lt;text text-anchor='middle' x='0' y='36' fill='currentColor' style='font-size:1em'>R&lt;/text>
&lt;text text-anchor='middle' x='8' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='8' y='20' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='8' y='36' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='16' y='4' fill='currentColor' style='font-size:1em'>L&lt;/text>
&lt;text text-anchor='middle' x='16' y='20' fill='currentColor' style='font-size:1em'>L&lt;/text>
&lt;text text-anchor='middle' x='16' y='36' fill='currentColor' style='font-size:1em'>L&lt;/text>
&lt;text text-anchor='middle' x='24' y='4' fill='currentColor' style='font-size:1em'>U&lt;/text>
&lt;text text-anchor='middle' x='24' y='20' fill='currentColor' style='font-size:1em'>U&lt;/text>
&lt;text text-anchor='middle' x='24' y='36' fill='currentColor' style='font-size:1em'>U&lt;/text>
&lt;text text-anchor='middle' x='40' y='4' fill='currentColor' style='font-size:1em'>G&lt;/text>
&lt;text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>G&lt;/text>
&lt;text text-anchor='middle' x='40' y='36' fill='currentColor' style='font-size:1em'>G&lt;/text>
&lt;text text-anchor='middle' x='48' y='4' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='48' y='36' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='56' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='56' y='36' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='64' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='64' y='36' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='72' y='4' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='72' y='36' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='80' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='80' y='36' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='88' y='4' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='88' y='36' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='96' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='96' y='36' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='112' y='4' fill='currentColor' style='font-size:1em'>w&lt;/text>
&lt;text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'>w&lt;/text>
&lt;text text-anchor='middle' x='112' y='36' fill='currentColor' style='font-size:1em'>w&lt;/text>
&lt;text text-anchor='middle' x='120' y='4' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='120' y='20' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='120' y='36' fill='currentColor' style='font-size:1em'>3&lt;/text>
&lt;text text-anchor='middle' x='128' y='4' fill='currentColor' style='font-size:1em'>:&lt;/text>
&lt;text text-anchor='middle' x='128' y='20' fill='currentColor' style='font-size:1em'>:&lt;/text>
&lt;text text-anchor='middle' x='128' y='36' fill='currentColor' style='font-size:1em'>:&lt;/text>
&lt;text text-anchor='middle' x='144' y='4' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='144' y='20' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='144' y='36' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='152' y='4' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='152' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='152' y='36' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='160' y='4' fill='currentColor' style='font-size:1em'>.&lt;/text>
&lt;text text-anchor='middle' x='160' y='20' fill='currentColor' style='font-size:1em'>.&lt;/text>
&lt;text text-anchor='middle' x='160' y='36' fill='currentColor' style='font-size:1em'>.&lt;/text>
&lt;text text-anchor='middle' x='168' y='4' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='168' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='168' y='36' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='176' y='4' fill='currentColor' style='font-size:1em'>9&lt;/text>
&lt;text text-anchor='middle' x='176' y='20' fill='currentColor' style='font-size:1em'>9&lt;/text>
&lt;text text-anchor='middle' x='176' y='36' fill='currentColor' style='font-size:1em'>9&lt;/text>
&lt;text text-anchor='middle' x='184' y='4' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='184' y='20' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='184' y='36' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='192' y='4' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='192' y='20' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='192' y='36' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='200' y='4' fill='currentColor' style='font-size:1em'>8&lt;/text>
&lt;text text-anchor='middle' x='200' y='20' fill='currentColor' style='font-size:1em'>8&lt;/text>
&lt;text text-anchor='middle' x='200' y='36' fill='currentColor' style='font-size:1em'>8&lt;/text>
&lt;text text-anchor='middle' x='208' y='4' fill='currentColor' style='font-size:1em'>8&lt;/text>
&lt;text text-anchor='middle' x='208' y='20' fill='currentColor' style='font-size:1em'>8&lt;/text>
&lt;text text-anchor='middle' x='208' y='36' fill='currentColor' style='font-size:1em'>8&lt;/text>
&lt;/g>
&lt;/svg>
&lt;/div>
&lt;p>&lt;strong>Aha Moment&lt;/strong>:&lt;br>
PyTorch confirms it—ReLU keeps gradients steady, while sigmoid lets them vanish.&lt;/p>
&lt;h2 id="conclusion">Conclusion
&lt;/h2>&lt;p>You’ve just walked through the vanishing gradient problem.&lt;/p>
&lt;p>With sigmoid, gradients shrink exponentially in deeper layers, slowing learning.&lt;/p>
&lt;p>ReLU fixes this by keeping gradients robust.&lt;/p>
&lt;p>Try tweaking the network—add layers or change weights—and watch how gradients behave.&lt;/p>
&lt;p>You’ve got the tools and intuition now—happy experimenting!&lt;/p></description></item><item><title>Making A Simple Image With Tensors (Starting from Scratch)</title><link>https://shrsv.github.io/p/tensors-challenge/</link><pubDate>Fri, 28 Feb 2025 23:11:51 +0530</pubDate><guid>https://shrsv.github.io/p/tensors-challenge/</guid><description>&lt;hr>
&lt;p>&lt;em>Hi there! I&amp;rsquo;m Shrijith Venkatrama, founder of Hexmos. Right now, I’m building &lt;a class="link" href="https://hexmos.com/liveapi" target="_blank" rel="noopener"
>LiveAPI&lt;/a>, a tool that makes generating API docs from your code ridiculously easy.&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Tensors&lt;/strong> are a fundamental concept in machine learning and deep learning.&lt;/p>
&lt;p>In this tutorial, we will explore tensors in a fun and light-hearted way to gain some familiarity&lt;/p>
&lt;h2 id="what--is-a-tensor">What is a Tensor?
&lt;/h2>&lt;p>A tensor is a multi-dimensional array that generalizes familiar concepts:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Scalar:&lt;/strong> A single number (0D tensor).&lt;/li>
&lt;li>&lt;strong>Vector:&lt;/strong> A list of numbers (1D tensor).&lt;/li>
&lt;li>&lt;strong>Matrix:&lt;/strong> A grid of numbers (2D tensor).&lt;/li>
&lt;li>&lt;strong>Higher-dimensional tensors:&lt;/strong> Structures with 3 or more dimensions (e.g., 3D, 4D).&lt;/li>
&lt;/ul>
&lt;p>Think of tensors as containers for organizing data in multiple dimensions, like stacking grids or cubes.&lt;/p>
&lt;h2 id="the-challenge-draw-a-red-0-on-grey-background-using-tensors">The Challenge: Draw a Red &amp;ldquo;0&amp;rdquo; on Grey Background using Tensors
&lt;/h2>&lt;p>To start with, we are going to set a fairly simple goal.&lt;/p>
&lt;p>We will learn a bit about tensors and then try to draw a red &amp;ldquo;0&amp;rdquo; on a grey background using the new knowledge we acquire.&lt;/p>
&lt;p>For our goal:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Grayscale&lt;/strong> = 2D tensor (intensity values).&lt;/li>
&lt;li>&lt;strong>Color (red &amp;ldquo;0&amp;rdquo;)&lt;/strong> = 3D tensor (RGB).&lt;/li>
&lt;/ul>
&lt;h2 id="scalars---single-pixels">Scalars - Single Pixels
&lt;/h2>&lt;p>A scalar is one number, like a pixel’s intensity.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">scalar&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">128&lt;/span> &lt;span class="c1"># Medium gray&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Scalar (Pixel Intensity):&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">scalar&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>128 is medium gray (0 = black, 255 = white).&lt;/li>
&lt;li>This is a 0D tensor, the simplest building block.&lt;/li>
&lt;/ul>
&lt;h2 id="vectors---rows-of-pixels">Vectors - Rows of Pixels
&lt;/h2>&lt;p>A vector (1D tensor) is a sequence of numbers, like a row of pixels.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">vector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">128&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">192&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">255&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Vector (Row of Pixels):&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">vector&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">matplotlib.pyplot&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">plt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vector&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vector&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s1">&amp;#39;ro&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Vector: Row of Pixel Intensities&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xlabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Pixel Intensity (0 = Black, 255 = White)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ylabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Position in Row&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">grid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://shrsv.github.io/p/tensors-challenge/1.png"
width="587"
height="455"
srcset="https://shrsv.github.io/p/tensors-challenge/1_hu_dbd4f0b078d4fa15.png 480w, https://shrsv.github.io/p/tensors-challenge/1_hu_f0c3b94f7566a06d.png 1024w"
loading="lazy"
alt="red dots"
class="gallery-image"
data-flex-grow="129"
data-flex-basis="309px"
>&lt;/p>
&lt;p>In this image - you can see the pixel intensity going from 0 to 255.&lt;/p>
&lt;p>0 means - black, and 255 means white, and anything in between is a shade of grey.&lt;/p>
&lt;h2 id="matrices---grayscale-images">Matrices - Grayscale Images
&lt;/h2>&lt;p>A matrix (2D tensor) is a grid of numbers, like a grayscale image.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">matrix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">128&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">192&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Matrix (Grayscale Image):&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">matrix&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">imshow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">matrix&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cmap&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;gray&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;2x2 Grayscale Image&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xlabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Column&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ylabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Row&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">colorbar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Intensity (0 = Black, 255 = White)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://shrsv.github.io/p/tensors-challenge/2.png"
width="560"
height="455"
srcset="https://shrsv.github.io/p/tensors-challenge/2_hu_a397f5537369bde3.png 480w, https://shrsv.github.io/p/tensors-challenge/2_hu_53b2d0937e43fa49.png 1024w"
loading="lazy"
alt="grayscale matrix"
class="gallery-image"
data-flex-grow="123"
data-flex-basis="295px"
>&lt;/p>
&lt;ul>
&lt;li>Each cell in this matrix represents a pixel&amp;rsquo;s intensity.&lt;/li>
&lt;li>The colorbar shows the intensity values.&lt;/li>
&lt;/ul>
&lt;h2 id="3d-tensors---adding-color">3D Tensors - Adding Color
&lt;/h2>&lt;p>A 3D tensor has three 2D matrices for RGB channels.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">red_channel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="c1"># Red in top-left&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">green_channel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">blue_channel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">color_image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">red_channel&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">green_channel&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">blue_channel&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Color Image (RGB Channels):&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">color_image&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fig&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">axs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subplots&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">figsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">channel&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">color&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">enumerate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">zip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">color_image&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Red&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Green&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Blue&amp;#39;&lt;/span>&lt;span class="p">])):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">axs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">imshow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">channel&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cmap&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;gray&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">axs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">color&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> Channel&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">axs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_xlabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Column&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">axs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_ylabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Row&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tight_layout&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://shrsv.github.io/p/tensors-challenge/3.png"
width="957"
height="293"
srcset="https://shrsv.github.io/p/tensors-challenge/3_hu_a02b15875b9b74b9.png 480w, https://shrsv.github.io/p/tensors-challenge/3_hu_85f0929c29bcff7a.png 1024w"
loading="lazy"
alt="3d tensor"
class="gallery-image"
data-flex-grow="326"
data-flex-basis="783px"
>&lt;/p>
&lt;p>Visualization:&lt;/p>
&lt;ul>
&lt;li>Three subplots: RGB channels.&lt;/li>
&lt;li>Red Channel: 255 at top-left (white); others 0 (black).&lt;/li>
&lt;li>Green/Blue: All 0.&lt;/li>
&lt;/ul>
&lt;p>Explanation:&lt;/p>
&lt;ul>
&lt;li>3x2x2 tensor where only red is active.&lt;/li>
&lt;/ul>
&lt;h2 id="combining-channels">Combining Channels
&lt;/h2>&lt;p>Combine RGB channels into a color image.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">color_image_array&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">color_image&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">axis&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">imshow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">color_image_array&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Combined 2x2 Color Image&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xlabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Column&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ylabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Row&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://shrsv.github.io/p/tensors-challenge/4.png"
width="476"
height="455"
srcset="https://shrsv.github.io/p/tensors-challenge/4_hu_f35e6260a9b17607.png 480w, https://shrsv.github.io/p/tensors-challenge/4_hu_a40720e29cc9645a.png 1024w"
loading="lazy"
alt="combined channels"
class="gallery-image"
data-flex-grow="104"
data-flex-basis="251px"
>&lt;/p>
&lt;p>Visualization:&lt;/p>
&lt;ul>
&lt;li>Image: Red top-left, black elsewhere.&lt;/li>
&lt;li>Axes: 2x2 grid.&lt;/li>
&lt;/ul>
&lt;p>Explanation:&lt;/p>
&lt;ul>
&lt;li>RGB = (255, 0, 0) is red; (0, 0, 0) is black&lt;/li>
&lt;/ul>
&lt;h2 id="grayscale-background">Grayscale Background
&lt;/h2>&lt;p>Create a 5x5 grayscale background.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">background&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="mi">128&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Grayscale Background:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">background&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">imshow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">background&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cmap&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;gray&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;5x5 Grayscale Background&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xlabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Column&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ylabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Row&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">colorbar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Intensity (0 = Black, 255 = White)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://shrsv.github.io/p/tensors-challenge/5.png"
width="526"
height="455"
srcset="https://shrsv.github.io/p/tensors-challenge/5_hu_88ddac4ebabc55d7.png 480w, https://shrsv.github.io/p/tensors-challenge/5_hu_f6c77eaceb843da9.png 1024w"
loading="lazy"
alt="grayscale bg"
class="gallery-image"
data-flex-grow="115"
data-flex-basis="277px"
>&lt;/p>
&lt;p>Visualization:&lt;/p>
&lt;ul>
&lt;li>Uniform gray: All 128.&lt;/li>
&lt;li>Axes: 5x5 grid.&lt;/li>
&lt;/ul>
&lt;p>Explanation:&lt;/p>
&lt;ul>
&lt;li>A 2D tensor for a medium gray background.&lt;/li>
&lt;/ul>
&lt;h2 id="drawing-a-red-0">Drawing a Red &amp;ldquo;0&amp;rdquo;
&lt;/h2>&lt;p>Now, draw a red &amp;ldquo;0&amp;rdquo; on the 5x5 background using a 3D tensor. We’ll define &amp;ldquo;0&amp;rdquo; as a small oval.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Define &amp;#34;0&amp;#34; as an oval in 5x5 grid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">zero_positions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)]&lt;/span> &lt;span class="c1"># Oval shape&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Initialize 5x5 RGB channels&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">red_channel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">green_channel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">blue_channel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set red &amp;#34;0&amp;#34; pixels&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">pos&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">zero_positions&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">red_channel&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]][&lt;/span>&lt;span class="n">pos&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">255&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set grayscale background (RGB = 128, 128, 128)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">zero_positions&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">red_channel&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">128&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">green_channel&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">128&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">blue_channel&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">128&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Combine into 3D tensor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">color_image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">red_channel&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">green_channel&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">blue_channel&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">color_image_array&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">color_image&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">axis&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Visualize&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">imshow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">color_image_array&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Red &amp;#39;0&amp;#39; on Grayscale Background&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xlabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Column&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ylabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Row&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://shrsv.github.io/p/tensors-challenge/6.png"
width="427"
height="455"
srcset="https://shrsv.github.io/p/tensors-challenge/6_hu_90dc0fcc492d06ac.png 480w, https://shrsv.github.io/p/tensors-challenge/6_hu_6b222cf7835ed10c.png 1024w"
loading="lazy"
alt="red 0 on gray"
class="gallery-image"
data-flex-grow="93"
data-flex-basis="225px"
>&lt;/p>
&lt;h3 id="visualization">Visualization:
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Image&lt;/strong>: A red oval &amp;ldquo;0&amp;rdquo; on gray.&lt;/li>
&lt;li>&lt;strong>Red pixels&lt;/strong>: RGB = (255, 0, 0) at zero_positions.&lt;/li>
&lt;li>&lt;strong>Gray background&lt;/strong>: RGB = (128, 128, 128) elsewhere.&lt;/li>
&lt;li>&lt;strong>Axes&lt;/strong>: 5x5 grid.&lt;/li>
&lt;/ul>
&lt;h3 id="explanation">Explanation:
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>New zero_positions&lt;/strong>: Forms a rough oval:
&lt;ul>
&lt;li>Top: (1,1), (1,2), (1,3)&lt;/li>
&lt;li>Sides: (2,1), (2,3)&lt;/li>
&lt;li>Bottom: (3,1), (3,2), (3,3)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>This 5x5x3 tensor places red where the &amp;ldquo;0&amp;rdquo; is and gray everywhere else.&lt;/li>
&lt;/ul>
&lt;h2 id="conclusion">Conclusion
&lt;/h2>&lt;p>So - that&amp;rsquo;s it.&lt;/p>
&lt;p>We progressed from:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Scalars&lt;/strong>: Pixel intensities.&lt;/li>
&lt;li>&lt;strong>Vectors&lt;/strong>: Rows of pixels.&lt;/li>
&lt;li>&lt;strong>Matrices&lt;/strong>: Grayscale images.&lt;/li>
&lt;li>&lt;strong>3D Tensors&lt;/strong>: Color images.&lt;/li>
&lt;/ul>
&lt;p>At each step, we visualized the data to understand its structure and content.&lt;/p>
&lt;p>Hope this gave you a good intuition about tensors!&lt;/p></description></item><item><title>How many Indian Companies Generate 1M+ USD in ARR?</title><link>https://shrsv.github.io/p/indian-msme-1mil/</link><pubDate>Thu, 27 Feb 2025 16:35:55 +0530</pubDate><guid>https://shrsv.github.io/p/indian-msme-1mil/</guid><description>&lt;h2 id="the-problem">The Problem
&lt;/h2>&lt;p>As a founder of &lt;a class="link" href="https://hexmos.com" target="_blank" rel="noopener"
>a startup&lt;/a> building from India, I often ask myself what
is the situation of Indian startups in the global market.&lt;/p>
&lt;p>In startup literature across the web, we often hear about the 1 million
in USD ARR as a benchmark for a startup to be considered a &amp;ldquo;serious&amp;rdquo; company.&lt;/p>
&lt;p>So I wanted to know, how many Indian startups already possess 1M+ USD in ARR?&lt;/p>
&lt;h2 id="a-bit-of-terminological-groundwork">A Bit of Terminological Groundwork
&lt;/h2>&lt;p>When we talk about startups and revenues, sometimes, the terminology can get a bit confusing.&lt;/p>
&lt;p>For instance, the top line revenue of a startup is called &amp;ldquo;ARR&amp;rdquo; or Annual Recurring Revenue.&lt;/p>
&lt;p>But when we talk about MSMEs, the top line revenue is called &amp;ldquo;Turnover&amp;rdquo;.&lt;/p>
&lt;p>In many accounting contexts, we use numbers like &amp;ldquo;EBITDA&amp;rdquo; or &amp;ldquo;EBIT&amp;rdquo; to get a sense of the profitability of a company.&lt;/p>
&lt;p>&lt;img src="https://shrsv.github.io/p/indian-msme-1mil/ebitda.jpg"
width="800"
height="1028"
srcset="https://shrsv.github.io/p/indian-msme-1mil/ebitda_hu_87d0841013d0ccc.jpg 480w, https://shrsv.github.io/p/indian-msme-1mil/ebitda_hu_2f80aa785e63726f.jpg 1024w"
loading="lazy"
alt="Terminology Help"
class="gallery-image"
data-flex-grow="77"
data-flex-basis="186px"
>&lt;/p>
&lt;div class="goat svg-container ">
&lt;svg
xmlns="http://www.w3.org/2000/svg"
font-family="Menlo,Lucida Console,monospace"
viewBox="0 0 512 233"
>
&lt;g transform='translate(8,16)'>
&lt;text text-anchor='middle' x='0' y='4' fill='currentColor' style='font-size:1em'>R&lt;/text>
&lt;text text-anchor='middle' x='0' y='52' fill='currentColor' style='font-size:1em'>G&lt;/text>
&lt;text text-anchor='middle' x='0' y='100' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='0' y='148' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='0' y='180' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='0' y='212' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='8' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='8' y='52' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='8' y='100' fill='currentColor' style='font-size:1em'>B&lt;/text>
&lt;text text-anchor='middle' x='8' y='148' fill='currentColor' style='font-size:1em'>B&lt;/text>
&lt;text text-anchor='middle' x='8' y='180' fill='currentColor' style='font-size:1em'>B&lt;/text>
&lt;text text-anchor='middle' x='8' y='212' fill='currentColor' style='font-size:1em'>A&lt;/text>
&lt;text text-anchor='middle' x='16' y='4' fill='currentColor' style='font-size:1em'>v&lt;/text>
&lt;text text-anchor='middle' x='16' y='52' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='16' y='100' fill='currentColor' style='font-size:1em'>I&lt;/text>
&lt;text text-anchor='middle' x='16' y='148' fill='currentColor' style='font-size:1em'>I&lt;/text>
&lt;text text-anchor='middle' x='16' y='180' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='16' y='212' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='24' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='24' y='52' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='24' y='100' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='24' y='148' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='32' y='4' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='32' y='52' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='32' y='100' fill='currentColor' style='font-size:1em'>D&lt;/text>
&lt;text text-anchor='middle' x='32' y='180' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='32' y='212' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='40' y='4' fill='currentColor' style='font-size:1em'>u&lt;/text>
&lt;text text-anchor='middle' x='40' y='100' fill='currentColor' style='font-size:1em'>A&lt;/text>
&lt;text text-anchor='middle' x='40' y='148' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='48' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='48' y='52' fill='currentColor' style='font-size:1em'>P&lt;/text>
&lt;text text-anchor='middle' x='48' y='180' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='48' y='212' fill='currentColor' style='font-size:1em'>D&lt;/text>
&lt;text text-anchor='middle' x='56' y='4' fill='currentColor' style='font-size:1em'>/&lt;/text>
&lt;text text-anchor='middle' x='56' y='52' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='56' y='100' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='56' y='148' fill='currentColor' style='font-size:1em'>I&lt;/text>
&lt;text text-anchor='middle' x='56' y='180' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='56' y='212' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='64' y='4' fill='currentColor' style='font-size:1em'>S&lt;/text>
&lt;text text-anchor='middle' x='64' y='52' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='64' y='148' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='64' y='180' fill='currentColor' style='font-size:1em'>x&lt;/text>
&lt;text text-anchor='middle' x='64' y='212' fill='currentColor' style='font-size:1em'>v&lt;/text>
&lt;text text-anchor='middle' x='72' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='72' y='52' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='72' y='100' fill='currentColor' style='font-size:1em'>(&lt;/text>
&lt;text text-anchor='middle' x='72' y='148' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='72' y='180' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='72' y='212' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='80' y='4' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='80' y='52' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='80' y='100' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='80' y='148' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='80' y='180' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='80' y='212' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='88' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='88' y='52' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='88' y='100' fill='currentColor' style='font-size:1em'>q&lt;/text>
&lt;text text-anchor='middle' x='88' y='148' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='88' y='212' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='96' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='96' y='100' fill='currentColor' style='font-size:1em'>u&lt;/text>
&lt;text text-anchor='middle' x='96' y='148' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='96' y='180' fill='currentColor' style='font-size:1em'>(&lt;/text>
&lt;text text-anchor='middle' x='96' y='212' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='104' y='4' fill='currentColor' style='font-size:1em'>/&lt;/text>
&lt;text text-anchor='middle' x='104' y='52' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='104' y='100' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='104' y='148' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='104' y='180' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='104' y='212' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='112' y='4' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='112' y='100' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='112' y='148' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='112' y='180' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='112' y='212' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='120' y='4' fill='currentColor' style='font-size:1em'>u&lt;/text>
&lt;text text-anchor='middle' x='120' y='52' fill='currentColor' style='font-size:1em'>S&lt;/text>
&lt;text text-anchor='middle' x='120' y='100' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='128' y='4' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='128' y='52' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='128' y='68' fill='currentColor' style='font-size:1em'>I&lt;/text>
&lt;text text-anchor='middle' x='128' y='100' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='128' y='148' fill='currentColor' style='font-size:1em'>(&lt;/text>
&lt;text text-anchor='middle' x='128' y='180' fill='currentColor' style='font-size:1em'>G&lt;/text>
&lt;text text-anchor='middle' x='128' y='212' fill='currentColor' style='font-size:1em'>(&lt;/text>
&lt;text text-anchor='middle' x='136' y='4' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='136' y='52' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='136' y='68' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='136' y='100' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='136' y='148' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='136' y='180' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='136' y='212' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='144' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='144' y='52' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='144' y='68' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='144' y='100' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='144' y='148' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='144' y='180' fill='currentColor' style='font-size:1em'>v&lt;/text>
&lt;text text-anchor='middle' x='144' y='212' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='152' y='4' fill='currentColor' style='font-size:1em'>v&lt;/text>
&lt;text text-anchor='middle' x='152' y='52' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='152' y='68' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='152' y='180' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='160' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='160' y='52' fill='currentColor' style='font-size:1em'>y&lt;/text>
&lt;text text-anchor='middle' x='160' y='68' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='160' y='100' fill='currentColor' style='font-size:1em'>D&lt;/text>
&lt;text text-anchor='middle' x='160' y='116' fill='currentColor' style='font-size:1em'>=&lt;/text>
&lt;text text-anchor='middle' x='160' y='148' fill='currentColor' style='font-size:1em'>C&lt;/text>
&lt;text text-anchor='middle' x='160' y='180' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='160' y='212' fill='currentColor' style='font-size:1em'>S&lt;/text>
&lt;text text-anchor='middle' x='168' y='4' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='168' y='68' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='168' y='100' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='168' y='148' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='168' y='180' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='168' y='212' fill='currentColor' style='font-size:1em'>h&lt;/text>
&lt;text text-anchor='middle' x='176' y='4' fill='currentColor' style='font-size:1em'>/&lt;/text>
&lt;text text-anchor='middle' x='176' y='52' fill='currentColor' style='font-size:1em'>(&lt;/text>
&lt;text text-anchor='middle' x='176' y='68' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='176' y='100' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='176' y='116' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='176' y='148' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='176' y='180' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='176' y='212' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='184' y='4' fill='currentColor' style='font-size:1em'>A&lt;/text>
&lt;text text-anchor='middle' x='184' y='52' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='184' y='68' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='184' y='100' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='184' y='116' fill='currentColor' style='font-size:1em'>B&lt;/text>
&lt;text text-anchor='middle' x='184' y='148' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='184' y='180' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='184' y='212' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='192' y='4' fill='currentColor' style='font-size:1em'>R&lt;/text>
&lt;text text-anchor='middle' x='192' y='52' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='192' y='68' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='192' y='100' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='192' y='116' fill='currentColor' style='font-size:1em'>I&lt;/text>
&lt;text text-anchor='middle' x='192' y='148' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='192' y='180' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='192' y='212' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='200' y='4' fill='currentColor' style='font-size:1em'>R&lt;/text>
&lt;text text-anchor='middle' x='200' y='100' fill='currentColor' style='font-size:1em'>c&lt;/text>
&lt;text text-anchor='middle' x='200' y='116' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='200' y='148' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='200' y='180' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='200' y='212' fill='currentColor' style='font-size:1em'>h&lt;/text>
&lt;text text-anchor='middle' x='208' y='52' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='208' y='68' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='208' y='100' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='208' y='148' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='208' y='180' fill='currentColor' style='font-size:1em'>)&lt;/text>
&lt;text text-anchor='middle' x='208' y='212' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='216' y='4' fill='currentColor' style='font-size:1em'>-&lt;/text>
&lt;text text-anchor='middle' x='216' y='52' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='216' y='68' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='216' y='100' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='216' y='116' fill='currentColor' style='font-size:1em'>(&lt;/text>
&lt;text text-anchor='middle' x='216' y='148' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='216' y='212' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='224' y='52' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='224' y='68' fill='currentColor' style='font-size:1em'>x&lt;/text>
&lt;text text-anchor='middle' x='224' y='100' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='224' y='116' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='224' y='148' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='224' y='180' fill='currentColor' style='font-size:1em'>=&lt;/text>
&lt;text text-anchor='middle' x='224' y='212' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='232' y='4' fill='currentColor' style='font-size:1em'>C&lt;/text>
&lt;text text-anchor='middle' x='232' y='52' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='232' y='68' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='232' y='100' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='232' y='116' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='232' y='148' fill='currentColor' style='font-size:1em'>)&lt;/text>
&lt;text text-anchor='middle' x='232' y='212' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='240' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='240' y='52' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='240' y='68' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='240' y='100' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='240' y='116' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='240' y='180' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='240' y='212' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='248' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='248' y='52' fill='currentColor' style='font-size:1em'>y&lt;/text>
&lt;text text-anchor='middle' x='248' y='68' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='248' y='100' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='248' y='116' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='248' y='148' fill='currentColor' style='font-size:1em'>=&lt;/text>
&lt;text text-anchor='middle' x='248' y='180' fill='currentColor' style='font-size:1em'>A&lt;/text>
&lt;text text-anchor='middle' x='248' y='212' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='256' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='256' y='52' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='256' y='116' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='256' y='180' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='256' y='212' fill='currentColor' style='font-size:1em'>)&lt;/text>
&lt;text text-anchor='middle' x='264' y='52' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='264' y='68' fill='currentColor' style='font-size:1em'>D&lt;/text>
&lt;text text-anchor='middle' x='264' y='100' fill='currentColor' style='font-size:1em'>+&lt;/text>
&lt;text text-anchor='middle' x='264' y='116' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='264' y='148' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='272' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='272' y='52' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='272' y='68' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='272' y='116' fill='currentColor' style='font-size:1em'>g&lt;/text>
&lt;text text-anchor='middle' x='272' y='148' fill='currentColor' style='font-size:1em'>B&lt;/text>
&lt;text text-anchor='middle' x='272' y='180' fill='currentColor' style='font-size:1em'>(&lt;/text>
&lt;text text-anchor='middle' x='272' y='212' fill='currentColor' style='font-size:1em'>=&lt;/text>
&lt;text text-anchor='middle' x='280' y='4' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='280' y='52' fill='currentColor' style='font-size:1em'>)&lt;/text>
&lt;text text-anchor='middle' x='280' y='68' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='280' y='100' fill='currentColor' style='font-size:1em'>I&lt;/text>
&lt;text text-anchor='middle' x='280' y='116' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='280' y='148' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='280' y='180' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='288' y='68' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='288' y='100' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='288' y='180' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='288' y='212' fill='currentColor' style='font-size:1em'>R&lt;/text>
&lt;text text-anchor='middle' x='296' y='4' fill='currentColor' style='font-size:1em'>G&lt;/text>
&lt;text text-anchor='middle' x='296' y='52' fill='currentColor' style='font-size:1em'>=&lt;/text>
&lt;text text-anchor='middle' x='296' y='68' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='296' y='100' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='296' y='116' fill='currentColor' style='font-size:1em'>B&lt;/text>
&lt;text text-anchor='middle' x='296' y='148' fill='currentColor' style='font-size:1em'>(&lt;/text>
&lt;text text-anchor='middle' x='296' y='180' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='296' y='212' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='304' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='304' y='68' fill='currentColor' style='font-size:1em'>c&lt;/text>
&lt;text text-anchor='middle' x='304' y='100' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='304' y='116' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='304' y='148' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='304' y='180' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='304' y='212' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='312' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='312' y='52' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='312' y='68' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='312' y='100' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='312' y='116' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='312' y='148' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='312' y='180' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='312' y='212' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='320' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='320' y='52' fill='currentColor' style='font-size:1em'>B&lt;/text>
&lt;text text-anchor='middle' x='320' y='68' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='320' y='100' fill='currentColor' style='font-size:1em'>g&lt;/text>
&lt;text text-anchor='middle' x='320' y='116' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='320' y='148' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='320' y='180' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='320' y='212' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='328' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='328' y='52' fill='currentColor' style='font-size:1em'>I&lt;/text>
&lt;text text-anchor='middle' x='328' y='68' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='328' y='100' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='328' y='116' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='328' y='148' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='328' y='180' fill='currentColor' style='font-size:1em'>g&lt;/text>
&lt;text text-anchor='middle' x='328' y='212' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='336' y='52' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='336' y='68' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='336' y='100' fill='currentColor' style='font-size:1em'>b&lt;/text>
&lt;text text-anchor='middle' x='336' y='116' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='336' y='148' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='336' y='180' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='336' y='212' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='344' y='4' fill='currentColor' style='font-size:1em'>S&lt;/text>
&lt;text text-anchor='middle' x='344' y='52' fill='currentColor' style='font-size:1em'>D&lt;/text>
&lt;text text-anchor='middle' x='344' y='68' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='344' y='100' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='344' y='148' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='344' y='212' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='352' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='352' y='52' fill='currentColor' style='font-size:1em'>A&lt;/text>
&lt;text text-anchor='middle' x='352' y='68' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='352' y='100' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='352' y='116' fill='currentColor' style='font-size:1em'>I&lt;/text>
&lt;text text-anchor='middle' x='352' y='148' fill='currentColor' style='font-size:1em'>g&lt;/text>
&lt;text text-anchor='middle' x='352' y='180' fill='currentColor' style='font-size:1em'>A&lt;/text>
&lt;text text-anchor='middle' x='360' y='4' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='360' y='116' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='360' y='148' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='360' y='180' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='360' y='212' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='368' y='4' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='368' y='52' fill='currentColor' style='font-size:1em'>(&lt;/text>
&lt;text text-anchor='middle' x='368' y='68' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='368' y='100' fill='currentColor' style='font-size:1em'>A&lt;/text>
&lt;text text-anchor='middle' x='368' y='116' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='368' y='180' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='368' y='212' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='376' y='52' fill='currentColor' style='font-size:1em'>E&lt;/text>
&lt;text text-anchor='middle' x='376' y='68' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='376' y='100' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='376' y='116' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='376' y='148' fill='currentColor' style='font-size:1em'>B&lt;/text>
&lt;text text-anchor='middle' x='376' y='180' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='376' y='212' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='384' y='4' fill='currentColor' style='font-size:1em'>(&lt;/text>
&lt;text text-anchor='middle' x='384' y='20' fill='currentColor' style='font-size:1em'>=&lt;/text>
&lt;text text-anchor='middle' x='384' y='52' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='384' y='68' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='384' y='100' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='384' y='116' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='384' y='148' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='384' y='180' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='384' y='212' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='392' y='4' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='392' y='52' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='392' y='100' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='392' y='116' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='392' y='148' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='392' y='212' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='400' y='4' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='400' y='20' fill='currentColor' style='font-size:1em'>G&lt;/text>
&lt;text text-anchor='middle' x='400' y='52' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='400' y='68' fill='currentColor' style='font-size:1em'>A&lt;/text>
&lt;text text-anchor='middle' x='400' y='100' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='400' y='116' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='400' y='148' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='400' y='180' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='400' y='212' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='408' y='20' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='408' y='52' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='408' y='68' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='408' y='100' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='408' y='116' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='408' y='148' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='408' y='180' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='408' y='212' fill='currentColor' style='font-size:1em'>g&lt;/text>
&lt;text text-anchor='middle' x='416' y='4' fill='currentColor' style='font-size:1em'>S&lt;/text>
&lt;text text-anchor='middle' x='416' y='20' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='416' y='52' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='416' y='68' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='416' y='100' fill='currentColor' style='font-size:1em'>z&lt;/text>
&lt;text text-anchor='middle' x='416' y='148' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='416' y='180' fill='currentColor' style='font-size:1em'>x&lt;/text>
&lt;text text-anchor='middle' x='416' y='212' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='424' y='4' fill='currentColor' style='font-size:1em'>u&lt;/text>
&lt;text text-anchor='middle' x='424' y='20' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='424' y='52' fill='currentColor' style='font-size:1em'>g&lt;/text>
&lt;text text-anchor='middle' x='424' y='68' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='424' y='100' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='424' y='116' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='424' y='180' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='432' y='4' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='432' y='20' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='432' y='52' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='432' y='68' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='432' y='100' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='432' y='116' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='432' y='148' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='432' y='180' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='440' y='4' fill='currentColor' style='font-size:1em'>p&lt;/text>
&lt;text text-anchor='middle' x='440' y='68' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='440' y='100' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='440' y='116' fill='currentColor' style='font-size:1em'>d&lt;/text>
&lt;text text-anchor='middle' x='440' y='148' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='440' y='180' fill='currentColor' style='font-size:1em'>)&lt;/text>
&lt;text text-anchor='middle' x='448' y='4' fill='currentColor' style='font-size:1em'>l&lt;/text>
&lt;text text-anchor='middle' x='448' y='20' fill='currentColor' style='font-size:1em'>P&lt;/text>
&lt;text text-anchor='middle' x='448' y='52' fill='currentColor' style='font-size:1em'>B&lt;/text>
&lt;text text-anchor='middle' x='448' y='68' fill='currentColor' style='font-size:1em'>z&lt;/text>
&lt;text text-anchor='middle' x='448' y='100' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='448' y='148' fill='currentColor' style='font-size:1em'>x&lt;/text>
&lt;text text-anchor='middle' x='456' y='4' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='456' y='20' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='456' y='52' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='456' y='68' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='456' y='100' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='456' y='116' fill='currentColor' style='font-size:1em'>T&lt;/text>
&lt;text text-anchor='middle' x='456' y='148' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='464' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='464' y='20' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='464' y='52' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='464' y='68' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='464' y='100' fill='currentColor' style='font-size:1em'>)&lt;/text>
&lt;text text-anchor='middle' x='464' y='116' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='464' y='148' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='472' y='4' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='472' y='20' fill='currentColor' style='font-size:1em'>f&lt;/text>
&lt;text text-anchor='middle' x='472' y='52' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='472' y='68' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='472' y='116' fill='currentColor' style='font-size:1em'>x&lt;/text>
&lt;text text-anchor='middle' x='472' y='148' fill='currentColor' style='font-size:1em'>)&lt;/text>
&lt;text text-anchor='middle' x='480' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='480' y='20' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='480' y='52' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='480' y='68' fill='currentColor' style='font-size:1em'>o&lt;/text>
&lt;text text-anchor='middle' x='480' y='116' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='488' y='4' fill='currentColor' style='font-size:1em'>)&lt;/text>
&lt;text text-anchor='middle' x='488' y='20' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='488' y='52' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='488' y='68' fill='currentColor' style='font-size:1em'>n&lt;/text>
&lt;text text-anchor='middle' x='488' y='116' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='496' y='68' fill='currentColor' style='font-size:1em'>)&lt;/text>
&lt;text text-anchor='middle' x='496' y='116' fill='currentColor' style='font-size:1em'>)&lt;/text>
&lt;/g>
&lt;/svg>
&lt;/div>
&lt;h2 id="the-data">The Data
&lt;/h2>&lt;p>We fetch some grounding numbers from &lt;a class="link" href="https://www.ibef.org/industry/msme-presentation" target="_blank" rel="noopener"
>IBEF&lt;/a> and plot
it with a bar chart.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">micro&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3_93_18_355&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">small&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">6_08_935&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">medium&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">55_488&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">all&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">micro&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">small&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">medium&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Total active MSMEs: &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">all&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;micro %: &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">micro&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nb">all&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;small %: &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">small&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nb">all&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;medium %: &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">medium&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nb">all&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Import required libraries&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">seaborn&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">sns&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">matplotlib.pyplot&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">plt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pandas&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">pd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Ensure plots show inline in Google Colab&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">%&lt;/span>&lt;span class="n">matplotlib&lt;/span> &lt;span class="n">inline&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">categories&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Micro&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Small&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Medium&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">percentages&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mf">98.3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">counts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;3,93,18,355&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;6,08,935&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;55,488&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Create a DataFrame&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DataFrame&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s2">&amp;#34;Category&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">categories&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Percentage&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">percentages&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Count&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">counts&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Set Seaborn style&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sns&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_style&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;whitegrid&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Create the bar plot&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">figure&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">figsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sns&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">barplot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Category&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Percentage&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">df&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">palette&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;viridis&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">edgecolor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;black&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Annotate with exact percentages and counts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">percent&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">enumerate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">zip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">df&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Percentage&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">df&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Count&amp;#34;&lt;/span>&lt;span class="p">])):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ax&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">percent&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">percent&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">%&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">(&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ha&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;center&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fontsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fontweight&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;bold&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Labels and title&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xlabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ylabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Percentage&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fontsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;MSME Distribution in India&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fontsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fontweight&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;bold&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Show plot inline in Colab&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The result is very clear: the vast majority of MSMEs are micro businesses.&lt;/p>
&lt;p>&lt;img src="https://shrsv.github.io/p/indian-msme-1mil/msme_distribution.png"
width="699"
height="452"
srcset="https://shrsv.github.io/p/indian-msme-1mil/msme_distribution_hu_d42587df7e37b335.png 480w, https://shrsv.github.io/p/indian-msme-1mil/msme_distribution_hu_6686d1b046f638af.png 1024w"
loading="lazy"
alt="MSME Distribution"
class="gallery-image"
data-flex-grow="154"
data-flex-basis="371px"
>&lt;/p>
&lt;h3 id="classifying-msmes">Classifying MSMEs
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Criteria&lt;/th>
&lt;th>Turnover&lt;/th>
&lt;th>Investment&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Micro&lt;/strong>&lt;/td>
&lt;td>Rs. 5 crores (US$ 610,000)&lt;/td>
&lt;td>Less than Rs. 1 crore (US$ 120,000)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Small&lt;/strong>&lt;/td>
&lt;td>Rs. 50 crores (US$ 6.1 million)&lt;/td>
&lt;td>More than Rs. 1 crore (US$ 120,000) but less than Rs. 10 crore (US$ 1.2 million)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Medium&lt;/strong>&lt;/td>
&lt;td>Rs. 250 crores (US$ 30.4 million)&lt;/td>
&lt;td>More than Rs. 10 crore (US$ 1.2 million), but less than Rs. 50 crore (US$ 6.1 million)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>For our question, we are interested in only Small and Medium MSMEs.&lt;/p>
&lt;p>The reason is simple: we are looking for companies that are already generating 1M+ USD in ARR.
Micro businesses do not fall in this category.&lt;/p>
&lt;h2 id="estimating-the-number-of-msmes-with--83-cr-inr-in-arr">Estimating the Number of MSMEs with &amp;gt; 8.3 Cr INR in ARR
&lt;/h2>&lt;h3 id="small-msmes">Small MSMEs
&lt;/h3>&lt;ul>
&lt;li>50% above Rs. 5 crore → 304,467&lt;/li>
&lt;li>50% of those above Rs. 8.3 crore → 152,234&lt;/li>
&lt;/ul>
&lt;h3 id="medium-msmes">Medium MSMEs
&lt;/h3>&lt;ul>
&lt;li>55,488 (all above Rs. 50 crore)&lt;/li>
&lt;/ul>
&lt;h3 id="large-companies">Large Companies
&lt;/h3>&lt;ul>
&lt;li>Estimated between 10,000 to 20,000&lt;/li>
&lt;/ul>
&lt;h3 id="monte-carlo-simulation">Monte Carlo Simulation
&lt;/h3>&lt;ul>
&lt;li>Uses random sampling to estimate a 95% confidence interval for large companies.&lt;/li>
&lt;/ul>
&lt;h3 id="final-estimate">Final Estimate
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Total Range&lt;/strong>: ~ 100,000 to 200,000&lt;/li>
&lt;li>&lt;strong>95% CI for Large Companies&lt;/strong>: A refined estimate with confidence bounds.&lt;/li>
&lt;/ul>
&lt;p>This provides a &lt;strong>quantitative estimate&lt;/strong> while acknowledging uncertainty.&lt;/p>
&lt;h3 id="code-to-visualize-the-estimates">Code to Visualize the Estimates
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Calculate the number of MSMEs in each category&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">scipy.stats&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">stats&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Given data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">small_total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">608935&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">small_above_5cr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">small_total&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="c1"># 50% above Rs. 5 crore&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">small_above_8_3cr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">small_above_5cr&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="c1"># 50% above Rs. 8.3 crore&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">medium_total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">55488&lt;/span> &lt;span class="c1"># All medium MSMEs are above Rs. 50 crore&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Large companies estimate&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">large_lower&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">large_upper&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">20000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Estimate range of total count&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">estimated_total_lower&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">small_above_8_3cr&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">medium_total&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">large_lower&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">estimated_total_upper&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">small_above_8_3cr&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">medium_total&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">large_upper&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Confidence interval for large companies (assuming uniform distribution)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">large_sample&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uniform&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">large_lower&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">large_upper&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Monte Carlo sampling&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">confidence_interval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">percentile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">large_sample&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mf">2.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">97.5&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="c1"># 95% confidence interval&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Print results&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Estimated Small MSMEs above Rs. 8.3 crore: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">small_above_8_3cr&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">,&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Medium MSMEs: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">medium_total&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">,&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Estimated Large Companies: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">large_lower&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">,&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> to &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">large_upper&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">,&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Total Estimate: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">estimated_total_lower&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">,&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> to &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">estimated_total_upper&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">,&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;95% Confidence Interval for Large Companies: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">confidence_interval&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">,.0f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> to &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">confidence_interval&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">,.0f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Graphing:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pandas&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">pd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">seaborn&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">sns&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">matplotlib.pyplot&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">plt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Seaborn styling&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sns&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;whitegrid&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Given data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">categories&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Small MSMEs (&amp;gt;8.3cr)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Medium MSMEs (&amp;gt;50cr)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Large Companies (&amp;gt;100cr)&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">small_total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">608935&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">small_above_5cr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">small_total&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="c1"># 50% above Rs. 5 crore&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">small_above_8_3cr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">small_above_5cr&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span> &lt;span class="c1"># 50% above Rs. 8.3 crore&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">medium_total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">55488&lt;/span> &lt;span class="c1"># All medium MSMEs are above Rs. 50 crore&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">large_lower&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">large_upper&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20000&lt;/span> &lt;span class="c1"># Large company estimate&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Monte Carlo simulation for Large Companies CI&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">large_sample&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uniform&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">large_lower&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">large_upper&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">confidence_interval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">np&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">percentile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">large_sample&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mf">2.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">97.5&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="c1"># 95% confidence interval&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Dataframe for plotting&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DataFrame&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Category&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">categories&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Count&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">small_above_8_3cr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">medium_total&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">large_lower&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">large_upper&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="c1"># Use mid-point for Large&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Lower&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">small_above_8_3cr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">medium_total&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">confidence_interval&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Upper&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">small_above_8_3cr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">medium_total&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">confidence_interval&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Calculate xerr (error bars)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;xerr&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Upper&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Count&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># Only positive error bars&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Plot&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">figure&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">figsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sns&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">barplot&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Category&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Count&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">hue&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Category&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># Assign hue to avoid warning&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">palette&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;#1f77b4&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;#ff7f0e&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;#2ca02c&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="c1"># Custom colors&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">errorbar&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># Disable automatic error bars&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">capsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Manually add error bars for Large Companies&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">errorbar&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Count&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">xerr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;xerr&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;none&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ecolor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;black&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">elinewidth&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">1.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">capsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Labels &amp;amp; Titles&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xlabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Estimated Count&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ylabel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Enterprise Category&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Distribution of MSMEs &amp;amp; Large Companies in India&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fontsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fontweight&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;bold&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">legend&lt;/span>&lt;span class="p">([],&lt;/span> &lt;span class="p">[],&lt;/span> &lt;span class="n">frameon&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Remove extra legend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Add exact numbers as text&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">category&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">enumerate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">zip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Count&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Category&amp;#34;&lt;/span>&lt;span class="p">])):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">1.05&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">,&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">va&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;center&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fontsize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">xlim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Upper&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">1.2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Scale x-axis properly&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tight_layout&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Show plot&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plt&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="the-result">The Result
&lt;/h3>&lt;p>&lt;img src="https://shrsv.github.io/p/indian-msme-1mil/arr_1mil_plus.png"
width="984"
height="484"
srcset="https://shrsv.github.io/p/indian-msme-1mil/arr_1mil_plus_hu_f33e95cfe00717c2.png 480w, https://shrsv.github.io/p/indian-msme-1mil/arr_1mil_plus_hu_aca5306c80bec4ac.png 1024w"
loading="lazy"
alt="ARR 1 Million USD (8.3 Cr INR) Plus"
class="gallery-image"
data-flex-grow="203"
data-flex-basis="487px"
>&lt;/p>
&lt;h2 id="the-conclusion">The Conclusion
&lt;/h2>&lt;p>The toal number of MSMEs with 1M+ USD in ARR is somewhere around 200K organizations. &lt;strong>That is a mere 0.5% of the 4 crore businesses active in the country.&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://shrsv.github.io/p/indian-msme-1mil/total_guess.png"
width="365"
height="133"
srcset="https://shrsv.github.io/p/indian-msme-1mil/total_guess_hu_8e47eb33387b92b6.png 480w, https://shrsv.github.io/p/indian-msme-1mil/total_guess_hu_70b0d5978cfb1388.png 1024w"
loading="lazy"
alt="Total Guess"
class="gallery-image"
data-flex-grow="274"
data-flex-basis="658px"
>&lt;/p>
&lt;p>It could be interesting to compare India&amp;rsquo;s data to:&lt;/p>
&lt;ul>
&lt;li>Other developing countries of the present day&lt;/li>
&lt;li>Recently developed countires of the past 50-75 years&lt;/li>
&lt;/ul>
&lt;p>And see what we can learn from them.&lt;/p></description></item><item><title>Archives</title><link>https://shrsv.github.io/archives/</link><pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate><guid>https://shrsv.github.io/archives/</guid><description/></item><item><title>Links</title><link>https://shrsv.github.io/links/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shrsv.github.io/links/</guid><description>&lt;!--
To use this feature, add `links` section to frontmatter.
This page's frontmatter:
```yaml
links:
- title: GitHub
description: GitHub is the world's largest software development platform.
website: https://github.com
image: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
- title: TypeScript
description: TypeScript is a typed superset of JavaScript that compiles to plain JavaScript.
website: https://www.typescriptlang.org
image: ts-logo-128.jpg
```
`image` field accepts both local and external images.
--></description></item><item><title>Search</title><link>https://shrsv.github.io/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shrsv.github.io/search/</guid><description/></item></channel></rss>